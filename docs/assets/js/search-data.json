{"0": {
    "doc": "Grapple IT",
    "title": "Table of contents",
    "content": ". | Overview | Package Contents | Required packages | Installation guide | Scene setup | . ",
    "url": "/pages/GRPL_IT/GrappleIT.html#table-of-contents",
    
    "relUrl": "/pages/GRPL_IT/GrappleIT.html#table-of-contents"
  },"1": {
    "doc": "Grapple IT",
    "title": "Overview",
    "content": "The main features of the Grapple IT package are: . | An interactable system, with a base class to inherit from and multiple implementations. | Teleport functionaly, to traverse the world with. | Mesh baking functionality. | 3D math functions. | Gizmo extension to generate 3D shapes in the scene view. | . ",
    "url": "/pages/GRPL_IT/GrappleIT.html#overview",
    
    "relUrl": "/pages/GRPL_IT/GrappleIT.html#overview"
  },"2": {
    "doc": "Grapple IT",
    "title": "Package contents",
    "content": ". | Script features . | Interactable system | Teleportation system | Mesh baking | 3D Math functions | 3D Gizmo extensions | . | Prefabs . | Prefabs for all the implemented interactables | A prefab for the teleportation anchor | Various simple models | A prefab of the grapple player | . | Gestures file . | A JSON file containing standard gestures for Grapple | . | Models . | Mug, hammer and valve models | . | Shaders . | A shader for a ghost material | A shader for rounded UI rectangles | . | Materials . | Some sample materials of the shaders | . | . ",
    "url": "/pages/GRPL_IT/GrappleIT.html#package-contents",
    
    "relUrl": "/pages/GRPL_IT/GrappleIT.html#package-contents"
  },"3": {
    "doc": "Grapple IT",
    "title": "Required packages",
    "content": "Grapple Interaction Toolkit requires mutliple packages to work correctly. All packages that are shared by Grapple Core and IT are not mentioned here, but can be found here. All dependencies: . | Grapple Core | Text Mesh Pro | . ",
    "url": "/pages/GRPL_IT/GrappleIT.html#required-packages",
    
    "relUrl": "/pages/GRPL_IT/GrappleIT.html#required-packages"
  },"4": {
    "doc": "Grapple IT",
    "title": "Installation guide",
    "content": "Follow the installation-guide of Grapple Core (can be found here) . ",
    "url": "/pages/GRPL_IT/GrappleIT.html#installation-guide",
    
    "relUrl": "/pages/GRPL_IT/GrappleIT.html#installation-guide"
  },"5": {
    "doc": "Grapple IT",
    "title": "Scene setup",
    "content": "Follow the scene setup of Grapple Core (can be found here) . ",
    "url": "/pages/GRPL_IT/GrappleIT.html#scene-setup",
    
    "relUrl": "/pages/GRPL_IT/GrappleIT.html#scene-setup"
  },"6": {
    "doc": "Grapple IT",
    "title": "Grapple IT",
    "content": " ",
    "url": "/pages/GRPL_IT/GrappleIT.html",
    
    "relUrl": "/pages/GRPL_IT/GrappleIT.html"
  },"7": {
    "doc": "Interactables",
    "title": "Interactables",
    "content": " ",
    "url": "/pages/GRPL_IT/Interactables.html",
    
    "relUrl": "/pages/GRPL_IT/Interactables.html"
  },"8": {
    "doc": "Locomotion",
    "title": "Locomotion",
    "content": " ",
    "url": "/pages/GRPL_IT/Locomotion.html",
    
    "relUrl": "/pages/GRPL_IT/Locomotion.html"
  },"9": {
    "doc": "Math",
    "title": "Math",
    "content": " ",
    "url": "/pages/GRPL_IT/Math.html",
    
    "relUrl": "/pages/GRPL_IT/Math.html"
  },"10": {
    "doc": "Mesh Baking",
    "title": "Mesh Baking",
    "content": " ",
    "url": "/pages/GRPL_IT/MeshBaking.html",
    
    "relUrl": "/pages/GRPL_IT/MeshBaking.html"
  },"11": {
    "doc": "Attributes",
    "title": "Attributes",
    "content": " ",
    "url": "/pages/GRPL_Core/attributes.html",
    
    "relUrl": "/pages/GRPL_Core/attributes.html"
  },"12": {
    "doc": "Grapple Core",
    "title": "Table of contents",
    "content": ". | Overview | Package Contents | Required packages | Installation guide | Scene setup | . ",
    "url": "/pages/GRPL_Core/core.html#table-of-contents",
    
    "relUrl": "/pages/GRPL_Core/core.html#table-of-contents"
  },"13": {
    "doc": "Grapple Core",
    "title": "Overview",
    "content": "The main features of the Grapple core package are: . | Adapted Hand and joint tracking through the XRHands package | Hand visualization | Gesture recognition | . ",
    "url": "/pages/GRPL_Core/core.html#overview",
    
    "relUrl": "/pages/GRPL_Core/core.html#overview"
  },"14": {
    "doc": "Grapple Core",
    "title": "Package contents",
    "content": ". | Script features . | Custom attributes | Joint manager | Gesture Recognizer | Hand Visualizer | Unity type extension methods | . | Materials . | A simple default material for the hands | . | Prefabs . | A default input map for the gesture recognizer | . | Third party models . | Left and Right hand models from the XRHands package | . | . ",
    "url": "/pages/GRPL_Core/core.html#package-contents",
    
    "relUrl": "/pages/GRPL_Core/core.html#package-contents"
  },"15": {
    "doc": "Grapple Core",
    "title": "Required packages",
    "content": "Grapple Core relies on the XRHands package from Unity. To use this package requires a provider plug-in package that defines a hand provider. Install your desired plugin(s) by going to Project settings -&gt; XR plug-in Management or from the package manager. All dependencies: . | XRHands : 1.1.0 | Rhinox lightspeed: 1.5.3 | Rhinox Utilities: 1.5.2 | Rhinox GUIUtils 2.6.0 | Newtonsoft JSON: 3.1.0 | Json.NET Converters of Unity types by jilleJr: 1.5.0 | . ",
    "url": "/pages/GRPL_Core/core.html#required-packages",
    
    "relUrl": "/pages/GRPL_Core/core.html#required-packages"
  },"16": {
    "doc": "Grapple Core",
    "title": "Installation guide",
    "content": ". | Open the project in which to install this package. | Import the grapple 2.0 package and its dependencies. | Install the target VR plugin(s) (i.e. Oculus) and its packages | Set the Plug in provider to OpenXR and install its packages | Open the OpenXR submenu and set the correct interaction profile for your target architecture and enable the Hand Tracking Subsystem feature group. | If developing for Oculus: also enable the Meta feature groups. | . ",
    "url": "/pages/GRPL_Core/core.html#installation-guide",
    
    "relUrl": "/pages/GRPL_Core/core.html#installation-guide"
  },"17": {
    "doc": "Grapple Core",
    "title": "Scene setup",
    "content": "There is one necessary GameObject to have in each hand-tracking XR scene in your app: an XR Origin. The XR Origin GameObject enables device tracking and transforms trackables into Unity’s coordinate system. If this GameObject is not present in the scene, XR will not function properly. To create the XR origin, select GameObject -&gt; XR -&gt; XR Origin . On the XR Origin GameObject, add the GRPL Joint Manager and GRPL Hand Visualizer. In the GRPL Hand Visualizer component, set the left and right hand prefab to the provided prefabs in Grapple2.0 -&gt; Prefabs -&gt; Models. Set the Hand Material to the provided DefaultHandsMaterial that can be found in Grapple2.0 -&gt; Prefabs -&gt; Materials. All that’s left is to link your VR device (that supports hand tracking) and press play mode, then your hand should get tracked and visualized. ",
    "url": "/pages/GRPL_Core/core.html#scene-setup",
    
    "relUrl": "/pages/GRPL_Core/core.html#scene-setup"
  },"18": {
    "doc": "Grapple Core",
    "title": "Grapple Core",
    "content": " ",
    "url": "/pages/GRPL_Core/core.html",
    
    "relUrl": "/pages/GRPL_Core/core.html"
  },"19": {
    "doc": "Gesture System",
    "title": "Gesture System",
    "content": "LOREM IPSUM . ",
    "url": "/pages/GRPL_Core/gestures.html",
    
    "relUrl": "/pages/GRPL_Core/gestures.html"
  },"20": {
    "doc": "Home",
    "title": "Grapple 2.0",
    "content": "Welcome to the Grapple 2.0 documentation! Grapple is an open source, hand tracking framework for Unity. It is designed to create hand tracking VR applications that can be easily ported to different platforms. Grapple consists of the Grapple Core and Grapple Interaction Toolkit. The github repository can be found here . ",
    "url": "/#grapple-20",
    
    "relUrl": "/#grapple-20"
  },"21": {
    "doc": "Home",
    "title": "Grapple Core",
    "content": "Whitin the Core package, the core fundamentals of a hand tracking application and some utilities are implemented. These are: . | Joint system | Gesture system | Hand visualization | Extension methods for Unity types | . To have a look at the documentation of Grapple Core, click here . ",
    "url": "/#grapple-core",
    
    "relUrl": "/#grapple-core"
  },"22": {
    "doc": "Home",
    "title": "Grapple interaction toolkit",
    "content": "The Grapple Interaction Toolkit provides functionality to create interactive experiences in Unity. The main features of the Grapple IT package are: . | An interactable system, with a base class to inherit from and multiple implementations. | Teleport functionaly, to traverse the world with. | Mesh baking functionality. | 3D math functions. | Gizmo extension to generate 3D shapes in the scene view. | . To have a look at the documentation of Grapple Interaction Toolkit, click here . ",
    "url": "/#grapple-interaction-toolkit",
    
    "relUrl": "/#grapple-interaction-toolkit"
  },"23": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "/",
    
    "relUrl": "/"
  },"24": {
    "doc": "Joint System",
    "title": "Joint System",
    "content": "LOREM IPSUM . ",
    "url": "/pages/GRPL_Core/joints.html",
    
    "relUrl": "/pages/GRPL_Core/joints.html"
  },"25": {
    "doc": "Gesture Recognizer",
    "title": "GRPLGestureRecognizer Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#grplgesturerecognizer-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#grplgesturerecognizer-public-class"
  },"26": {
    "doc": "Gesture Recognizer",
    "title": "Description",
    "content": "This class implements the behaviour to detect gestures. These gestures can be imported from a json or recording during play mode. There is also the possibility to export the gestures in a (new) json file. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#description"
  },"27": {
    "doc": "Gesture Recognizer",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.GRPLGestureRecognizer[[GRPLGestureRecognizer]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.GRPLGestureRecognizer . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#diagram"
  },"28": {
    "doc": "Gesture Recognizer",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | RhinoxGesture | CurrentLeftGestureA RhinoxGesture object that represents the current gesture of the left hand. | get | . | RhinoxGesture | CurrentRightGestureA RhinoxGesture object that represents the current gesture of the right hand. | get | . | bool | LeftHandGestureRecognizedThisFrameA boolean flag that indicates whether a gesture was recognized for the first time this frame on the left hand. | get, private set | . | bool | RightHandGestureRecognizedThisFrameA boolean flag that indicates whether a gesture was recognized for the first time this frame on the right hand. | get, private set | . Methods . Public methods . | Returns | Name | . | RhinoxGesture | GetCurrentGestureOfHand(RhinoxHand hand)Returns the current gesture on the given hand if the hand is either left or right. Returns null if the given hand is invalid. | . | void | ReadGesturesFromJson(string path)Imports the gestures from the given json file at path “path”. If the directory or file is not valid, an empty list is added. Specify whether to overwrite the current gesture using “OverwriteGesturesOnImport” | . | bool | WasRecognizedGestureStartedThisFrame(RhinoxHand hand)Returns whether the current gesture on the given hand was recognized for the first time this frame. Returns false if the given hand is invalid. | . | void | WriteGesturesToJson()Writes all current gestures to a .json file at directory “ExportFilePath” with name “ExportFileName”.json. If the ExportFilePath directory is not valid, the application data path is used. | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#members"
  },"29": {
    "doc": "Gesture Recognizer",
    "title": "Details",
    "content": "Summary . This class implements the behaviour to detect gestures. These gestures can be imported from a json or recording during play mode. There is also the possibility to export the gestures in a (new) json file. Inheritance . | MonoBehaviour | . Constructors . GRPLGestureRecognizer . public GRPLGestureRecognizer() . Methods . GetCurrentGestureOfHand . public RhinoxGesture GetCurrentGestureOfHand(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . Summary . Returns the current gesture on the given hand if the hand is either left or right. Returns null if the given hand is invalid. Returns . The gesture on hand. WasRecognizedGestureStartedThisFrame . public bool WasRecognizedGestureStartedThisFrame(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . Summary . Returns whether the current gesture on the given hand was recognized for the first time this frame. Returns false if the given hand is invalid. Returns . Whether the current gesture on the given hand was recognized for the first time this frame. WriteGesturesToJson . public void WriteGesturesToJson() . Summary . Writes all current gestures to a .json file at directory “ExportFilePath” with name “ExportFileName”.json. If the ExportFilePath directory is not valid, the application data path is used. ReadGesturesFromJson . public void ReadGesturesFromJson(string path) . Arguments . | Type | Name | Description | . | string | path |   | . Summary . Imports the gestures from the given json file at path “path”. If the directory or file is not valid, an empty list is added. Specify whether to overwrite the current gesture using “OverwriteGesturesOnImport” . Properties . CurrentLeftGesture . public RhinoxGesture CurrentLeftGesture { get; } . Summary . A RhinoxGesture object that represents the current gesture of the left hand. CurrentRightGesture . public RhinoxGesture CurrentRightGesture { get; } . Summary . A RhinoxGesture object that represents the current gesture of the right hand. LeftHandGestureRecognizedThisFrame . public bool LeftHandGestureRecognizedThisFrame { get; private set; } . Summary . A boolean flag that indicates whether a gesture was recognized for the first time this frame on the left hand. RightHandGestureRecognizedThisFrame . public bool RightHandGestureRecognizedThisFrame { get; private set; } . Summary . A boolean flag that indicates whether a gesture was recognized for the first time this frame on the right hand. Events . GlobalInitialized . public static event Action&lt;GRPLGestureRecognizer&gt; GlobalInitialized . Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html#details"
  },"30": {
    "doc": "Gesture Recognizer",
    "title": "Gesture Recognizer",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLGestureRecognizer.html"
  },"31": {
    "doc": "GRPL Hand Visualizer",
    "title": "GRPLHandVisualizer Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#grplhandvisualizer-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#grplhandvisualizer-public-class"
  },"32": {
    "doc": "GRPL Hand Visualizer",
    "title": "Description",
    "content": "Visualizes the hands with the given prefabs. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#description"
  },"33": {
    "doc": "GRPL Hand Visualizer",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.GRPLHandVisualizer[[GRPLHandVisualizer]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.GRPLHandVisualizer . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#diagram"
  },"34": {
    "doc": "GRPL Hand Visualizer",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | Material | HandMaterialReturns the material used for the hand prefabs. | get | . | SkinnedMeshRenderer | LeftHandRendererReturns the store reference to the SkinnedMeshRenderer of the left hand. | get | . | SkinnedMeshRenderer | RightHandRendererReturns the store reference to the SkinnedMeshRenderer of the right hand. | get | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#members"
  },"35": {
    "doc": "GRPL Hand Visualizer",
    "title": "Details",
    "content": "Summary . Visualizes the hands with the given prefabs. Inheritance . | MonoBehaviour | . Constructors . GRPLHandVisualizer . public GRPLHandVisualizer() . Properties . HandMaterial . public Material HandMaterial { get; } . Summary . Returns the material used for the hand prefabs. LeftHandRenderer . public SkinnedMeshRenderer LeftHandRenderer { get; } . Summary . Returns the store reference to the SkinnedMeshRenderer of the left hand. RightHandRenderer . public SkinnedMeshRenderer RightHandRenderer { get; } . Summary . Returns the store reference to the SkinnedMeshRenderer of the right hand. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html#details"
  },"36": {
    "doc": "GRPL Hand Visualizer",
    "title": "GRPL Hand Visualizer",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLHandVisualizer.html"
  },"37": {
    "doc": "GRPL Joint Manager",
    "title": "GRPLJointManager Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#grpljointmanager-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#grpljointmanager-public-class"
  },"38": {
    "doc": "GRPL Joint Manager",
    "title": "Description",
    "content": "Takes the Joint data from XRHandSubsystem and maps them to our own RhinoxJoint structure. This manager also supplies and updates Capsule colliders with rigidbodies RhinoxJointCapsule . This manager also relays events from the XRHandSubsystem when tracking is either lost or acquired. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#description"
  },"39": {
    "doc": "GRPL Joint Manager",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.GRPLJointManager[[GRPLJointManager]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.GRPLJointManager . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#diagram"
  },"40": {
    "doc": "GRPL Joint Manager",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | bool | AreJointsInitialisedA boolean variable that indicates if the joints are initialized. | get, private set | . | bool | IsLeftHandTrackedA boolean variable that indicates if the left hand is being tracked. | get, private set | . | bool | IsRightHandTrackedA boolean variable that indicates if the right hand is being tracked. | get, private set | . | bool | JointCollisionsEnabledA boolean property that gets or sets the value of _jointCollisionsEnabled. When this value is set, it also sets the collisions of the hands with the joint capsules. | get, set | . | RhinoxJointCapsule[] | LeftHandCapsulesAn array of RhinoxJointCapsule objects that represent the joint capsules of the left hand. | get | . | GameObject | LeftHandParentObjA GameObject variable that represents the parent object of the left hand. | get | . | GameObject | LeftHandSocketA GameObject variable that represents the socket used to attach objects to the left hand. | get | . | RhinoxJointCapsule[] | RightHandCapsulesAn array of RhinoxJointCapsule objects that represent the joint capsules of the right hand. | get | . | GameObject | RightHandParentObjA GameObject variable that represents the parent object of the right hand. | get | . | GameObject | RightHandSocketA GameObject variable that represents the socket used to attach objects to the right hand. | get | . Methods . Public methods . | Returns | Name | . | void | DisableHandCollisions(RhinoxHand hand)This method enables collisions for the hand specified by the RhinoxHand parameter. It internally calls the method SetHandCollisions with a false value for the state parameter and the specified RhinoxHand. | . | void | DisableHandCollisionsAfterDelay(RhinoxHand hand) | . | void | EnableHandCollisions(RhinoxHand hand)This method enables collisions for the hand specified by the RhinoxHand parameter. It internally calls the method SetHandCollisions with a true value for the state parameter and the specified RhinoxHand. | . | void | EnableHandCollisionsAfterDelay(RhinoxHand hand) | . | ICollection&lt;RhinoxJoint&gt; | GetJointsFromBothHand(XRHandJointID jointID)Gets all joints with XRHandJointID “jointID” from both hands. | . | void | SetHandCollisions(bool state, RhinoxHand hand) | . | bool | TryGetFingerBend(RhinoxHand hand, RhinoxFinger finger, out float bendValue, bool remap) | . | bool | TryGetJointFromHandById(XRHandJointID jointID, RhinoxHand rhinoxHand, out RhinoxJoint joint) | . | bool | TryGetJointsFromHand(RhinoxHand rhinoxHand, out List&lt;RhinoxJoint&gt; jointList) | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#members"
  },"41": {
    "doc": "GRPL Joint Manager",
    "title": "Details",
    "content": "Summary . Takes the Joint data from XRHandSubsystem and maps them to our own RhinoxJoint structure. This manager also supplies and updates Capsule colliders with rigidbodies RhinoxJointCapsule . This manager also relays events from the XRHandSubsystem when tracking is either lost or acquired. Remarks . Almost all classes in the Interaction Toolkit rely on this jointManager to function . Inheritance . | MonoBehaviour | . Constructors . GRPLJointManager . public GRPLJointManager() . Methods . EnableHandCollisions . public void EnableHandCollisions(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand | Hand to enable collisions on. | . Summary . This method enables collisions for the hand specified by the RhinoxHand parameter. It internally calls the method SetHandCollisions with a true value for the state parameter and the specified RhinoxHand. DisableHandCollisions . public void DisableHandCollisions(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand | Hand to disable collisions on. | . Summary . This method enables collisions for the hand specified by the RhinoxHand parameter. It internally calls the method SetHandCollisions with a false value for the state parameter and the specified RhinoxHand. EnableHandCollisionsAfterDelay . public void EnableHandCollisionsAfterDelay(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . DisableHandCollisionsAfterDelay . public void DisableHandCollisionsAfterDelay(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . SetHandCollisions . public void SetHandCollisions(bool state, RhinoxHand hand) . Arguments . | Type | Name | Description | . | bool | state |   | . | RhinoxHand | hand |   | . TryGetJointsFromHand . public bool TryGetJointsFromHand(RhinoxHand rhinoxHand, out List&lt;RhinoxJoint&gt; jointList) . Arguments . | Type | Name | Description | . | RhinoxHand | rhinoxHand |   | . | out List&lt;RhinoxJoint&gt; | jointList |   | . TryGetJointFromHandById . public bool TryGetJointFromHandById(XRHandJointID jointID, RhinoxHand rhinoxHand, out RhinoxJoint joint) . Arguments . | Type | Name | Description | . | XRHandJointID | jointID |   | . | RhinoxHand | rhinoxHand |   | . | out RhinoxJoint | joint |   | . TryGetFingerBend . public bool TryGetFingerBend(RhinoxHand hand, RhinoxFinger finger, out float bendValue, bool remap) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . | RhinoxFinger | finger |   | . | out float | bendValue |   | . | bool | remap |   | . GetJointsFromBothHand . public ICollection&lt;RhinoxJoint&gt; GetJointsFromBothHand(XRHandJointID jointID) . Arguments . | Type | Name | Description | . | XRHandJointID | jointID | The desired joint ID | . Summary . Gets all joints with XRHandJointID “jointID” from both hands. Returns . An ICollection holding all the RhinoxJoints corresponding with jointID . Properties . IsLeftHandTracked . public bool IsLeftHandTracked { get; private set; } . Summary . A boolean variable that indicates if the left hand is being tracked. IsRightHandTracked . public bool IsRightHandTracked { get; private set; } . Summary . A boolean variable that indicates if the right hand is being tracked. AreJointsInitialised . public bool AreJointsInitialised { get; private set; } . Summary . A boolean variable that indicates if the joints are initialized. JointCollisionsEnabled . public bool JointCollisionsEnabled { get; set; } . Summary . A boolean property that gets or sets the value of _jointCollisionsEnabled. When this value is set, it also sets the collisions of the hands with the joint capsules. LeftHandCapsules . public RhinoxJointCapsule LeftHandCapsules { get; } . Summary . An array of RhinoxJointCapsule objects that represent the joint capsules of the left hand. RightHandCapsules . public RhinoxJointCapsule RightHandCapsules { get; } . Summary . An array of RhinoxJointCapsule objects that represent the joint capsules of the right hand. LeftHandParentObj . public GameObject LeftHandParentObj { get; } . Summary . A GameObject variable that represents the parent object of the left hand. LeftHandSocket . public GameObject LeftHandSocket { get; } . Summary . A GameObject variable that represents the socket used to attach objects to the left hand. RightHandParentObj . public GameObject RightHandParentObj { get; } . Summary . A GameObject variable that represents the parent object of the right hand. RightHandSocket . public GameObject RightHandSocket { get; } . Summary . A GameObject variable that represents the socket used to attach objects to the right hand. Events . GlobalInitialized . public static event Action&lt;GRPLJointManager&gt; GlobalInitialized . Summary . A static event that is triggered when the GRPLJointManager is initialized globally, which passes itself as a parameter. TrackingAcquired . public event Action&lt;RhinoxHand&gt; TrackingAcquired . Summary . An event that is triggered when tracking is acquired for a hand. TrackingLost . public event Action&lt;RhinoxHand&gt; TrackingLost . Summary . An event that is triggered when tracking is lost for a hand. OnHandsUpdated . public event Action&lt;RhinoxHand&gt; OnHandsUpdated . Summary . An event that is triggered when a hand is updated. OnJointCapsulesInitialized . public event Action&lt;RhinoxHand&gt; OnJointCapsulesInitialized . Summary . An event that is triggered when the joint capsules are initialized. Initialized . private event Action Initialized . Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html#details"
  },"42": {
    "doc": "GRPL Joint Manager",
    "title": "GRPL Joint Manager",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLJointManager.html"
  },"43": {
    "doc": "GRPL Logger",
    "title": "GRPLLogger Internal class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#grpllogger-internal-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#grpllogger-internal-class"
  },"44": {
    "doc": "GRPL Logger",
    "title": "Description",
    "content": "This empty class gets used in combination with the Rhinox.Perceptor for custom logging behavior. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#description"
  },"45": {
    "doc": "GRPL Logger",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.GRPLLogger[[GRPLLogger]] end subgraph Rhinox.Perceptor Rhinox.Perceptor.CustomLogger[[CustomLogger]] end Rhinox.Perceptor.CustomLogger --&gt; Rhinox.XR.Grapple.GRPLLogger . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#diagram"
  },"46": {
    "doc": "GRPL Logger",
    "title": "Details",
    "content": "Summary . This empty class gets used in combination with the Rhinox.Perceptor for custom logging behavior. Inheritance . | CustomLogger | . Constructors . GRPLLogger . public GRPLLogger() . Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html#details"
  },"47": {
    "doc": "GRPL Logger",
    "title": "GRPL Logger",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-GRPLLogger.html"
  },"48": {
    "doc": "Hide If Field Attribute",
    "title": "HideIfFieldAttribute Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#hideiffieldattribute-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#hideiffieldattribute-public-class"
  },"49": {
    "doc": "Hide If Field Attribute",
    "title": "Description",
    "content": "This attribute class is used in Unity C# scripts to hide a serialized field in the inspector window if a sibling boolean field with the specified name has a certain value. This can be useful for creating conditional fields that are only visible when a certain condition is met. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#description"
  },"50": {
    "doc": "Hide If Field Attribute",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.HideIfFieldAttribute[[HideIfFieldAttribute]] end subgraph UnityEngine UnityEngine.PropertyAttribute[[PropertyAttribute]] end UnityEngine.PropertyAttribute --&gt; Rhinox.XR.Grapple.HideIfFieldAttribute . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#diagram"
  },"51": {
    "doc": "Hide If Field Attribute",
    "title": "Details",
    "content": "Summary . This attribute class is used in Unity C# scripts to hide a serialized field in the inspector window if a sibling boolean field with the specified name has a certain value. This can be useful for creating conditional fields that are only visible when a certain condition is met. Inheritance . | PropertyAttribute | . Constructors . HideIfFieldAttribute [1/2] . public HideIfFieldAttribute(bool boolState, string fieldName) . Arguments . | Type | Name | Description | . | bool | boolState |   | . | string | fieldName |   | . Summary . Creates the attribute and fills the BoolFieldName and BoolState fields. HideIfFieldAttribute [2/2] . public HideIfFieldAttribute(bool boolState, string fieldName, float propertyHeight) . Arguments . | Type | Name | Description | . | bool | boolState |   | . | string | fieldName |   | . | float | propertyHeight |   | . Summary . Creates the attribute and fills the BoolFieldName, BoolState and PropertyHeight fields. Also sets HeightPassed to true. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html#details"
  },"52": {
    "doc": "Hide If Field Attribute",
    "title": "Hide If Field Attribute",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-HideIfFieldAttribute.html"
  },"53": {
    "doc": "Info Box Attribute",
    "title": "InfoBoxAttribute Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#infoboxattribute-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#infoboxattribute-public-class"
  },"54": {
    "doc": "Info Box Attribute",
    "title": "Description",
    "content": "This attribute class is used in Unity C# scripts to display an information box above a field in the inspector window. The information box can contain a message and a message type, such as info, warning, or error. This can be useful for providing additional context or warnings about a field. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#description"
  },"55": {
    "doc": "Info Box Attribute",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.InfoBoxAttribute[[InfoBoxAttribute]] end subgraph UnityEngine UnityEngine.PropertyAttribute[[PropertyAttribute]] end UnityEngine.PropertyAttribute --&gt; Rhinox.XR.Grapple.InfoBoxAttribute . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#diagram"
  },"56": {
    "doc": "Info Box Attribute",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | string | MessageA string containing the message to display in the information box. | get, set | . | MessageType | MessageTypeA MessageType enum value specifying the type of message to display in the information box. | get, set | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#members"
  },"57": {
    "doc": "Info Box Attribute",
    "title": "Details",
    "content": "Summary . This attribute class is used in Unity C# scripts to display an information box above a field in the inspector window. The information box can contain a message and a message type, such as info, warning, or error. This can be useful for providing additional context or warnings about a field. Inheritance . | PropertyAttribute | . Constructors . InfoBoxAttribute [1/2] . public InfoBoxAttribute(string message) . Arguments . | Type | Name | Description | . | string | message | The message to display. | . Summary . This constructor creates an instance of the InfoBoxAttribute class with the given message and sets the message type to MessageType.Info. InfoBoxAttribute [2/2] . public InfoBoxAttribute(string message, MessageType messageType) . Arguments . | Type | Name | Description | . | string | message | The message to display. | . | MessageType | messageType | The desired message type. | . Summary . This constructor creates an instance of the InfoBoxAttribute class with the given message and message type. Properties . Message . public string Message { get; set; } . Summary . A string containing the message to display in the information box. MessageType . public MessageType MessageType { get; set; } . Summary . A MessageType enum value specifying the type of message to display in the information box. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html#details"
  },"58": {
    "doc": "Info Box Attribute",
    "title": "Info Box Attribute",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-InfoBoxAttribute.html"
  },"59": {
    "doc": "Range Field Attribute",
    "title": "RangeFieldAttribute Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#rangefieldattribute-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#rangefieldattribute-public-class"
  },"60": {
    "doc": "Range Field Attribute",
    "title": "Description",
    "content": "The RangeFieldAttribute is an attribute that can be applied to a field to restrict the minimum value of that field to the specified value and maximum value to the value of a sibling field. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#description"
  },"61": {
    "doc": "Range Field Attribute",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RangeFieldAttribute[[RangeFieldAttribute]] end subgraph UnityEngine UnityEngine.PropertyAttribute[[PropertyAttribute]] end UnityEngine.PropertyAttribute --&gt; Rhinox.XR.Grapple.RangeFieldAttribute . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#diagram"
  },"62": {
    "doc": "Range Field Attribute",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | string | MaxFieldNameA string holding the name of the sibling field to compare for the maximum value. | get, set | . | float | MinA float holding the minimum value for the field. | get, set | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#members"
  },"63": {
    "doc": "Range Field Attribute",
    "title": "Details",
    "content": "Summary . The RangeFieldAttribute is an attribute that can be applied to a field to restrict the minimum value of that field to the specified value and maximum value to the value of a sibling field. Inheritance . | PropertyAttribute | . Constructors . RangeFieldAttribute . public RangeFieldAttribute(float min, string maxFieldName) . Arguments . | Type | Name | Description | . | float | min | The minimum value. | . | string | maxFieldName | The name of the sibling, that holds the maximum value. | . Summary . Creates a new RangeFieldAttribute object with the specified minimum value and maximum field name. Properties . Min . public float Min { get; set; } . Summary . A float holding the minimum value for the field. MaxFieldName . public string MaxFieldName { get; set; } . Summary . A string holding the name of the sibling field to compare for the maximum value. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html#details"
  },"64": {
    "doc": "Range Field Attribute",
    "title": "Range Field Attribute",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RangeFieldAttribute.html"
  },"65": {
    "doc": "Rhinox Finger",
    "title": "RhinoxFinger Public enum",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#rhinoxfinger-public-enum",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#rhinoxfinger-public-enum"
  },"66": {
    "doc": "Rhinox Finger",
    "title": "Description",
    "content": "Represents the fingers on a hand, including the thumb and four fingers. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#description"
  },"67": {
    "doc": "Rhinox Finger",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RhinoxFinger[[RhinoxFinger]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#diagram"
  },"68": {
    "doc": "Rhinox Finger",
    "title": "Details",
    "content": "Summary . Represents the fingers on a hand, including the thumb and four fingers. Fields . Thumb . Summary . The thumb finger. Index . Summary . The index finger. Middle . Summary . The middle finger. Ring . Summary . The ring finger. Little . Summary . The little finger (also known as the pinky finger). Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html#details"
  },"69": {
    "doc": "Rhinox Finger",
    "title": "Rhinox Finger",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFinger.html"
  },"70": {
    "doc": "Rhinox Finger Extensions",
    "title": "RhinoxFingerExtensions Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#rhinoxfingerextensions-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#rhinoxfingerextensions-public-class"
  },"71": {
    "doc": "Rhinox Finger Extensions",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RhinoxFingerExtensions[[RhinoxFingerExtensions]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#diagram"
  },"72": {
    "doc": "Rhinox Finger Extensions",
    "title": "Members",
    "content": "Methods . Public Static methods . | Returns | Name | . | ICollection&lt;XRHandJointID&gt; | GetJointIdsFromFinger(RhinoxFinger finger)This extension method retrieves all the XRHandJointIds that correspond to the joints of a specified finger. | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#members"
  },"73": {
    "doc": "Rhinox Finger Extensions",
    "title": "Details",
    "content": "Methods . GetJointIdsFromFinger . public static ICollection&lt;XRHandJointID&gt; GetJointIdsFromFinger(RhinoxFinger finger) . Arguments . | Type | Name | Description | . | RhinoxFinger | finger | The finger for which the joint ids are being retrieved. | . Summary . This extension method retrieves all the XRHandJointIds that correspond to the joints of a specified finger. Remarks . If an invalid value is passed for the RhinoxFinger parameter, an empty collection is returned. Returns . A collection of XRHandJointID values that correspond to the joints of the specified finger. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html#details"
  },"74": {
    "doc": "Rhinox Finger Extensions",
    "title": "Rhinox Finger Extensions",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxFingerExtensions.html"
  },"75": {
    "doc": "Rhinox Gesture",
    "title": "RhinoxGesture Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#rhinoxgesture-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#rhinoxgesture-public-class"
  },"76": {
    "doc": "Rhinox Gesture",
    "title": "Description",
    "content": "The RhinoxGesture class represents a gesture in the Rhinox XR Grapple module. It contains data related to a gesture, such as the name, finger bend values, joint forward, distance and rotation thresholds, and events that are invoked when the gesture is recognized or unrecognized. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#description"
  },"77": {
    "doc": "Rhinox Gesture",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RhinoxGesture[[RhinoxGesture]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#diagram"
  },"78": {
    "doc": "Rhinox Gesture",
    "title": "Members",
    "content": "Methods . Public methods . | Returns | Name | . | void | AddListenerOnRecognized(UnityAction&lt;RhinoxHand&gt; action) | . | void | AddListenerOnUnRecognized(UnityAction&lt;RhinoxHand&gt; action) | . | bool | Equals(...) | . | int | GetHashCode() | . | void | InvokeOnRecognized(RhinoxHand hand)Invokes the OnRecognized event with the provided RhinoxHand parameter. | . | void | InvokeOnUnRecognized(RhinoxHand hand)Invokes the OnUnrecognized event with the provided RhinoxHand parameter. | . | void | RemoveAllListenersOnRecognized()Removes all listeners from the OnRecognized event. | . | void | RemoveAllListenersOnUnRecognized()Removes all listeners from the OnUnrecognized event. | . | void | RemoveListenerOnRecognized(UnityAction&lt;RhinoxHand&gt; action) | . | void | RemoveListenerOnUnRecognized(UnityAction&lt;RhinoxHand&gt; action) | . Public Static methods . | Returns | Name | . | bool | operator !=(RhinoxGesture obj1, RhinoxGesture obj2) | . | bool | operator ==(RhinoxGesture gestureOne, RhinoxGesture gestureTwo) | . | RhinoxGesture | NoGesture()Returns an instance of RhinoxGesture with default values, representing the absence of a gesture. | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#members"
  },"79": {
    "doc": "Rhinox Gesture",
    "title": "Details",
    "content": "Summary . The RhinoxGesture class represents a gesture in the Rhinox XR Grapple module. It contains data related to a gesture, such as the name, finger bend values, joint forward, distance and rotation thresholds, and events that are invoked when the gesture is recognized or unrecognized. Constructors . RhinoxGesture . public RhinoxGesture() . Methods . AddListenerOnRecognized . public void AddListenerOnRecognized(UnityAction&lt;RhinoxHand&gt; action) . Arguments . | Type | Name | Description | . | UnityAction&lt;RhinoxHand&gt; | action |   | . RemoveListenerOnRecognized . public void RemoveListenerOnRecognized(UnityAction&lt;RhinoxHand&gt; action) . Arguments . | Type | Name | Description | . | UnityAction&lt;RhinoxHand&gt; | action |   | . RemoveAllListenersOnRecognized . public void RemoveAllListenersOnRecognized() . Summary . Removes all listeners from the OnRecognized event. InvokeOnRecognized . public void InvokeOnRecognized(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . Summary . Invokes the OnRecognized event with the provided RhinoxHand parameter. AddListenerOnUnRecognized . public void AddListenerOnUnRecognized(UnityAction&lt;RhinoxHand&gt; action) . Arguments . | Type | Name | Description | . | UnityAction&lt;RhinoxHand&gt; | action |   | . RemoveListenerOnUnRecognized . public void RemoveListenerOnUnRecognized(UnityAction&lt;RhinoxHand&gt; action) . Arguments . | Type | Name | Description | . | UnityAction&lt;RhinoxHand&gt; | action |   | . RemoveAllListenersOnUnRecognized . public void RemoveAllListenersOnUnRecognized() . Summary . Removes all listeners from the OnUnrecognized event. InvokeOnUnRecognized . public void InvokeOnUnRecognized(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . Summary . Invokes the OnUnrecognized event with the provided RhinoxHand parameter. Equals [1/2] . public override bool Equals(object obj) . Arguments . | Type | Name | Description | . | object | obj |   | . Remarks . Does not compare the name or events! . GetHashCode . public override int GetHashCode() . Equals [2/2] . public bool Equals(RhinoxGesture other) . Arguments . | Type | Name | Description | . | RhinoxGesture | other |   | . Operator == . public static bool operator ==(RhinoxGesture gestureOne, RhinoxGesture gestureTwo) . Arguments . | Type | Name | Description | . | RhinoxGesture | gestureOne |   | . | RhinoxGesture | gestureTwo |   | . Operator != . public static bool operator !=(RhinoxGesture obj1, RhinoxGesture obj2) . Arguments . | Type | Name | Description | . | RhinoxGesture | obj1 |   | . | RhinoxGesture | obj2 |   | . NoGesture . public static RhinoxGesture NoGesture() . Summary . Returns an instance of RhinoxGesture with default values, representing the absence of a gesture. Returns . The empty instance. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html#details"
  },"80": {
    "doc": "Rhinox Gesture",
    "title": "Rhinox Gesture",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxGesture.html"
  },"81": {
    "doc": "Rhinox Hand",
    "title": "RhinoxHand Public enum",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#rhinoxhand-public-enum",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#rhinoxhand-public-enum"
  },"82": {
    "doc": "Rhinox Hand",
    "title": "Description",
    "content": "This enum defines the different types of hands. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#description"
  },"83": {
    "doc": "Rhinox Hand",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RhinoxHand[[RhinoxHand]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#diagram"
  },"84": {
    "doc": "Rhinox Hand",
    "title": "Details",
    "content": "Summary . This enum defines the different types of hands. Fields . Left . Summary . A left hand. Right . Summary . A right hand. Invalid . Summary . A value to represent an invalid value. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html#details"
  },"85": {
    "doc": "Rhinox Hand",
    "title": "Rhinox Hand",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHand.html"
  },"86": {
    "doc": "Rhinox Hand Extensions",
    "title": "RhinoxHandExtensions Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#rhinoxhandextensions-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#rhinoxhandextensions-public-class"
  },"87": {
    "doc": "Rhinox Hand Extensions",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RhinoxHandExtensions[[RhinoxHandExtensions]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#diagram"
  },"88": {
    "doc": "Rhinox Hand Extensions",
    "title": "Members",
    "content": "Methods . Public Static methods . | Returns | Name | . | RhinoxHand | GetInverse(RhinoxHand hand)Returns the inverse hand for the given hand. If the hand is Left, returns Right; if the hand is Right, returns Left. If the input hand is Invalid, logs an error and returns Invalid. | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#members"
  },"89": {
    "doc": "Rhinox Hand Extensions",
    "title": "Details",
    "content": "Methods . GetInverse . public static RhinoxHand GetInverse(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand | The hand to get the inverse of. | . Summary . Returns the inverse hand for the given hand. If the hand is Left, returns Right; if the hand is Right, returns Left. If the input hand is Invalid, logs an error and returns Invalid. Returns . The inverse hand. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html#details"
  },"90": {
    "doc": "Rhinox Hand Extensions",
    "title": "Rhinox Hand Extensions",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxHandExtensions.html"
  },"91": {
    "doc": "Rhinox Joint",
    "title": "RhinoxJoint Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#rhinoxjoint-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#rhinoxjoint-public-class"
  },"92": {
    "doc": "Rhinox Joint",
    "title": "Description",
    "content": "Represents a joint in a Grapple application. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#description"
  },"93": {
    "doc": "Rhinox Joint",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RhinoxJoint[[RhinoxJoint]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#diagram"
  },"94": {
    "doc": "Rhinox Joint",
    "title": "Details",
    "content": "Summary . Represents a joint in a Grapple application. Constructors . RhinoxJoint . public RhinoxJoint(XRHandJointID jointID) . Arguments . | Type | Name | Description | . | XRHandJointID | jointID | The ID of the XRHandJoint that this RhinoxJoint represents. | . Summary . Creates a new RhinoxJoint instance for the specified XRHandJointID. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html#details"
  },"95": {
    "doc": "Rhinox Joint",
    "title": "Rhinox Joint",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJoint.html"
  },"96": {
    "doc": "Rhinox Joint Capsule",
    "title": "RhinoxJointCapsule Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#rhinoxjointcapsule-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#rhinoxjointcapsule-public-class"
  },"97": {
    "doc": "Rhinox Joint Capsule",
    "title": "Description",
    "content": "A class representing a joint capsule in Rhinox XR Grapple, with a rigidbody and a capsule collider. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#description"
  },"98": {
    "doc": "Rhinox Joint Capsule",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.RhinoxJointCapsule[[RhinoxJointCapsule]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#diagram"
  },"99": {
    "doc": "Rhinox Joint Capsule",
    "title": "Details",
    "content": "Summary . A class representing a joint capsule in Rhinox XR Grapple, with a rigidbody and a capsule collider. Constructors . RhinoxJointCapsule . public RhinoxJointCapsule() . Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html#details"
  },"100": {
    "doc": "Rhinox Joint Capsule",
    "title": "Rhinox Joint Capsule",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-RhinoxJointCapsule.html"
  },"101": {
    "doc": "XR Joints Extensions",
    "title": "XRJointsExtensions Public class",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#xrjointsextensions-public-class",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#xrjointsextensions-public-class"
  },"102": {
    "doc": "XR Joints Extensions",
    "title": "Description",
    "content": "Contains extensions for XR Hand Joints. ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#description",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#description"
  },"103": {
    "doc": "XR Joints Extensions",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple Rhinox.XR.Grapple.XRJointsExtensions[[XRJointsExtensions]] end . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#diagram",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#diagram"
  },"104": {
    "doc": "XR Joints Extensions",
    "title": "Members",
    "content": "Methods . Public Static methods . | Returns | Name | . | bool | IsDistal(XRHandJointID joint)Returns a boolean value indicating if the specified XR hand joint ID is a distal joint. | . | bool | IsMetacarpal(XRHandJointID joint)Returns a boolean value indicating if the specified XR hand joint ID is a metacarpal joint. | . | bool | IsProximal(XRHandJointID joint)Returns a boolean value indicating if the specified XR hand joint ID is a proximal joint. | . | bool | IsTip(XRHandJointID joint)Returns a boolean value indicating if the specified XR hand joint ID is a tip joint. | . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#members",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#members"
  },"105": {
    "doc": "XR Joints Extensions",
    "title": "Details",
    "content": "Summary . Contains extensions for XR Hand Joints. Methods . IsDistal . public static bool IsDistal(XRHandJointID joint) . Arguments . | Type | Name | Description | . | XRHandJointID | joint | The XR hand joint ID to check. | . Summary . Returns a boolean value indicating if the specified XR hand joint ID is a distal joint. Returns . True if the specified XR hand joint ID is a distal joint, otherwise false. IsMetacarpal . public static bool IsMetacarpal(XRHandJointID joint) . Arguments . | Type | Name | Description | . | XRHandJointID | joint | The XR hand joint ID to check. | . Summary . Returns a boolean value indicating if the specified XR hand joint ID is a metacarpal joint. Returns . True if the specified XR hand joint ID is a metacarpal joint, otherwise false. IsProximal . public static bool IsProximal(XRHandJointID joint) . Arguments . | Type | Name | Description | . | XRHandJointID | joint | The XR hand joint ID to check. | . Summary . Returns a boolean value indicating if the specified XR hand joint ID is a proximal joint. Returns . True if the specified XR hand joint ID is a proximal joint, otherwise false. IsTip . public static bool IsTip(XRHandJointID joint) . Arguments . | Type | Name | Description | . | XRHandJointID | joint | The XR hand joint ID to check. | . Summary . Returns a boolean value indicating if the specified XR hand joint ID is a tip joint. Returns . True if the specified XR hand joint ID is a tip joint, otherwise false. Generated with ModularDoc . ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#details",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html#details"
  },"106": {
    "doc": "XR Joints Extensions",
    "title": "XR Joints Extensions",
    "content": " ",
    "url": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html",
    
    "relUrl": "/pages/GRPL_Core/rhinoxxrgrapple-XRJointsExtensions.html"
  },"107": {
    "doc": "Grapple Bake Options",
    "title": "GRPLBakeOptions Public enum",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#grplbakeoptions-public-enum",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#grplbakeoptions-public-enum"
  },"108": {
    "doc": "Grapple Bake Options",
    "title": "Description",
    "content": "This enum is used to control mesh baking behaviour. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#description"
  },"109": {
    "doc": "Grapple Bake Options",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLBakeOptions[[GRPLBakeOptions]] end . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#diagram"
  },"110": {
    "doc": "Grapple Bake Options",
    "title": "Details",
    "content": "Summary . This enum is used to control mesh baking behaviour. Fields . NoBake . Summary . Indicates that no baking of meshes will occur. StandardBake . Summary . Indicates that standard baking of meshes will occur. BakeAndParent . Summary . Indicates that baking of meshes will occur, and the result will be parented to the object. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html#details"
  },"111": {
    "doc": "Grapple Bake Options",
    "title": "Grapple Bake Options",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLBakeOptions.html"
  },"112": {
    "doc": "Grapple Button Interactable",
    "title": "GRPLButtonInteractable Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#grplbuttoninteractable-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#grplbuttoninteractable-public-class"
  },"113": {
    "doc": "Grapple Button Interactable",
    "title": "Description",
    "content": "This is a Button interactible that can be used for both UI and Mesh based buttons. The base transform is the button base. The interact object is the button surface. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#description"
  },"114": {
    "doc": "Grapple Button Interactable",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLButtonInteractable[[GRPLButtonInteractable]] Rhinox.XR.Grapple.It.GRPLInteractable[[GRPLInteractable]] class Rhinox.XR.Grapple.It.GRPLInteractable abstractStyle; end Rhinox.XR.Grapple.It.GRPLInteractable --&gt; Rhinox.XR.Grapple.It.GRPLButtonInteractable . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#diagram"
  },"115": {
    "doc": "Grapple Button Interactable",
    "title": "Members",
    "content": "Methods . Protected methods . | Returns | Name | . | void | Initialize()Used to initialize the button. | . | void | InteractStopped()Used to stop interaction with the button. | . | void | OnDrawGizmos() | . | void | ProximityStopped()Used to stop proximity with the button. | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) | . | Transform | GetReferenceTransform() | . | bool | ShouldInteractionCheckStop() | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#members"
  },"116": {
    "doc": "Grapple Button Interactable",
    "title": "Details",
    "content": "Summary . This is a Button interactible that can be used for both UI and Mesh based buttons. The base transform is the button base. The interact object is the button surface. Remarks . The vector from the base to the surface should follow the local forward vector! . Inheritance . | GRPLInteractable | . Constructors . GRPLButtonInteractable . public GRPLButtonInteractable() . Methods . Initialize . protected override void Initialize() . Summary . Used to initialize the button. InteractStopped . protected override void InteractStopped() . Summary . Used to stop interaction with the button. ProximityStopped . protected override void ProximityStopped() . Summary . Used to stop proximity with the button. CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint |   | . | RhinoxHand | hand |   | . TryGetCurrentInteractJoint . public override bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | outJoint |   | . | RhinoxHand | hand |   | . ShouldInteractionCheckStop . public override bool ShouldInteractionCheckStop() . GetReferenceTransform . public override Transform GetReferenceTransform() . OnDrawGizmos . protected override void OnDrawGizmos() . Events . ButtonDown . public event Action&lt;GRPLButtonInteractable&gt; ButtonDown . Summary . An event that occurs when the button is pressed down. The event takes a GRPLButtonInteractable as a parameter. ButtonUp . public event Action&lt;GRPLButtonInteractable&gt; ButtonUp . Summary . An event that occurs when the button is released. The event takes a GRPLButtonInteractable as a parameter. ButtonPressed . public event Action&lt;GRPLButtonInteractable&gt; ButtonPressed . Summary . An event that occurs when the button is held down. The event takes a GRPLButtonInteractable as a parameter. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html#details"
  },"117": {
    "doc": "Grapple Button Interactable",
    "title": "Grapple Button Interactable",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLButtonInteractable.html"
  },"118": {
    "doc": "Grapple Grabbable Base",
    "title": "GRPLGrabbableBase Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#grplgrabbablebase-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#grplgrabbablebase-public-class"
  },"119": {
    "doc": "Grapple Grabbable Base",
    "title": "Description",
    "content": "Base class to make an object grabbable, this can be via a bounding box or via a list of trigger colliders used as bounding box. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#description"
  },"120": {
    "doc": "Grapple Grabbable Base",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLGrabbableBase[[GRPLGrabbableBase]] Rhinox.XR.Grapple.It.GRPLInteractable[[GRPLInteractable]] class Rhinox.XR.Grapple.It.GRPLInteractable abstractStyle; end Rhinox.XR.Grapple.It.GRPLInteractable --&gt; Rhinox.XR.Grapple.It.GRPLGrabbableBase . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#diagram"
  },"121": {
    "doc": "Grapple Grabbable Base",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | bool | IsGrabbed | get, protected set | . Methods . Protected methods . | Returns | Name | . | void | Awake() | . | void | DropInternal() | . | void | GrabInternal(GameObject parent, RhinoxHand rhinoxHand) | . | void | Initialize() | . | void | OnDisable() | . | void | OnDrawGizmos() | . | void | OnEnable() | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) | . | void | TryDrop(RhinoxHand hand) | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) | . | void | TryGrab(RhinoxHand hand) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#members"
  },"122": {
    "doc": "Grapple Grabbable Base",
    "title": "Details",
    "content": "Summary . Base class to make an object grabbele, this can be via a bounding box or via a list of trigge rcolliders used as bounding box. Remarks . Inheritance . | GRPLInteractable | . Constructors . GRPLGrabbableBase . public GRPLGrabbableBase() . Methods . Awake . protected void Awake() . Initialize . protected override void Initialize() . OnEnable . protected override void OnEnable() . OnDisable . protected override void OnDisable() . CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint |   | . | RhinoxHand | hand |   | . TryGetCurrentInteractJoint . public override bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | outJoint |   | . | RhinoxHand | hand |   | . TryGrab . public void TryGrab(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . TryDrop . public void TryDrop(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . GrabInternal . protected virtual void GrabInternal(GameObject parent, RhinoxHand rhinoxHand) . Arguments . | Type | Name | Description | . | GameObject | parent |   | . | RhinoxHand | rhinoxHand |   | . DropInternal . protected virtual void DropInternal() . OnDrawGizmos . protected override void OnDrawGizmos() . Properties . IsGrabbed . public bool IsGrabbed { get; protected set; } . Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html#details"
  },"123": {
    "doc": "Grapple Grabbable Base",
    "title": "Grapple Grabbable Base",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLGrabbableBase.html"
  },"124": {
    "doc": "Grapple IT Logger",
    "title": "GRPLITLogger Internal class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#grplitlogger-internal-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#grplitlogger-internal-class"
  },"125": {
    "doc": "Grapple IT Logger",
    "title": "Description",
    "content": "This empty class gets used in combination with the Rhinox.Perceptor for custom logging behavior. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#description"
  },"126": {
    "doc": "Grapple IT Logger",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLITLogger[[GRPLITLogger]] end subgraph Rhinox.Perceptor Rhinox.Perceptor.CustomLogger[[CustomLogger]] end Rhinox.Perceptor.CustomLogger --&gt; Rhinox.XR.Grapple.It.GRPLITLogger . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#diagram"
  },"127": {
    "doc": "Grapple IT Logger",
    "title": "Details",
    "content": "Summary . This empty class gets used in combination with the Rhinox.Perceptor for custom logging behavior. Inheritance . | CustomLogger | . Constructors . GRPLITLogger . public GRPLITLogger() . Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html#details"
  },"128": {
    "doc": "Grapple IT Logger",
    "title": "Grapple IT Logger",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLITLogger.html"
  },"129": {
    "doc": "Grapple Base Interactable",
    "title": "GRPLInteractable Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#grplinteractable-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#grplinteractable-public-class"
  },"130": {
    "doc": "Grapple Base Interactable",
    "title": "Description",
    "content": "This is an abstract base class used for Grapple interactables. The derived interactables work seamlessly with the GRPLInteractableManager if all the pure abstract methods are correctly implemented. This class provides events and methods for detecting proximity and interaction with the interactable object. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#description"
  },"131": {
    "doc": "Grapple Base Interactable",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLInteractable[[GRPLInteractable]] class Rhinox.XR.Grapple.It.GRPLInteractable abstractStyle; end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.GRPLInteractable . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#diagram"
  },"132": {
    "doc": "Grapple Base Interactable",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | XRHandJointID | ProximateJointIDA read-only property that returns _proximateJointID. | get | . | float | ProximateRadiusA read-only property that returns _proximateRadius. | get | . | bool | ShouldPerformInteractCheckA boolean that determines whether interaction checks should be performed. | get, set | . | GRPLInteractionState | StateA read-only property that returns the current state of the interactable object. | get | . Methods . Protected methods . | Returns | Name | . | void | Destroyed()A virtual method that can be overridden in derived classes to perform tasks when the interactable object is destroyed. | . | void | Initialize()A virtual method that can be overridden in derived classes to perform initialization tasks. | . | void | InteractStarted()Invokes the OnInteractStarted event. | . | void | InteractStopped()Invokes the OnInteractEnded event. | . | void | OnDestroy()Invokes the InteractableDestroyed event and calls the Destroyed methods. | . | void | OnDisable()Sets the state of this interactable to disabled. | . | void | OnDrawGizmos() | . | void | OnEnable()Sets the state of this interactable to active. | . | void | ProximityStarted()Invokes the OnProximityStarted event. | . | void | ProximityStopped()Invokes the OnProximityStopped event. | . | void | Start()Calls the Initialize method and invoke the InteractableCreated event. | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand)Check whether the given joint activates the interaction for this interactable. | . | Transform | GetReferenceTransform()Returns the reference transform for this interactible. This can be used for proximate interaction checking. | . | void | SetState(GRPLInteractionState newState)Sets the new state for this interactable object and invokes the according events. | . | bool | ShouldInteractionCheckStop()Check, when currently interacting. If the interaction should not get checked anymore. I.e. When the previous interact joint is now behind the button press object. | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#members"
  },"133": {
    "doc": "Grapple Base Interactable",
    "title": "Details",
    "content": "Summary . This is an abstract base class used for Grapple interactables. The derived interactables work seamlessly with the GRPLInteractableManager if all the pure abstract methods are correctly implemented. This class provides events and methods for detecting proximity and interaction with the interactable object. Remarks . The GRPLInteractable.Start and GRPLInteractable.OnDestroy should NOT be overwritten. Use GRPLInteractable.Initialize GRPLInteractable.Destroyed respectively instead. Inheritance . | MonoBehaviour | . Constructors . GRPLInteractable . protected GRPLInteractable() . Methods . Start . protected virtual void Start() . Summary . Calls the Initialize method and invoke the InteractableCreated event. OnDestroy . protected virtual void OnDestroy() . Summary . Invokes the InteractableDestroyed event and calls the Destroyed methods. Initialize . protected virtual void Initialize() . Summary . A virtual method that can be overridden in derived classes to perform initialization tasks. Destroyed . protected virtual void Destroyed() . Summary . A virtual method that can be overridden in derived classes to perform tasks when the interactable object is destroyed. OnEnable . protected virtual void OnEnable() . Summary . Sets the state of this interactable to active. OnDisable . protected virtual void OnDisable() . Summary . Sets the state of this interactable to disabled. SetState . public void SetState(GRPLInteractionState newState) . Arguments . | Type | Name | Description | . | GRPLInteractionState | newState | The new state for the interactable object. | . Summary . Sets the new state for this interactable object and invokes the according events. Remarks . Return early if the newState equals the current state of the interactable object. InteractStarted . protected virtual void InteractStarted() . Summary . Invokes the OnInteractStarted event. InteractStopped . protected virtual void InteractStopped() . Summary . Invokes the OnInteractEnded event. ProximityStarted . protected virtual void ProximityStarted() . Summary . Invokes the OnProximityStarted event. ProximityStopped . protected virtual void ProximityStopped() . Summary . Invokes the OnProximityStopped event. ShouldInteractionCheckStop . public virtual bool ShouldInteractionCheckStop() . Summary . Check, when currently interacting. If the interaction should not get checked anymore. I.e. When the previous interact joint is now behind the button press object. GetReferenceTransform . public virtual Transform GetReferenceTransform() . Summary . Returns the reference transform for this interactible. This can be used for proximate interaction checking. Returns . The reference transform. CheckForInteraction . public abstract bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint | The joint to check with. | . | RhinoxHand | hand | The hand that the joint is from. | . Summary . Check whether the given joint activates the interaction for this interactable. Returns . Whether the interaction is now happening. TryGetCurrentInteractJoint . public abstract bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | outJoint |   | . | RhinoxHand | hand |   | . OnDrawGizmos . protected virtual void OnDrawGizmos() . Properties . ProximateJointID . public XRHandJointID ProximateJointID { get; } . Summary . A read-only property that returns _proximateJointID. ProximateRadius . public float ProximateRadius { get; } . Summary . A read-only property that returns _proximateRadius. State . public GRPLInteractionState State { get; } . Summary . A read-only property that returns the current state of the interactable object. ShouldPerformInteractCheck . public bool ShouldPerformInteractCheck { get; set; } . Summary . A boolean that determines whether interaction checks should be performed. Events . OnInteractStarted . public event Action&lt;GRPLInteractable&gt; OnInteractStarted . Summary . An event that is invoked when interaction with the interactable object starts. OnInteractEnded . public event Action&lt;GRPLInteractable&gt; OnInteractEnded . Summary . An event that is invoked when interaction with the interactable object ends. OnProximityStarted . public event Action&lt;GRPLInteractable&gt; OnProximityStarted . Summary . An event that is invoked when the user is close enough to the interactable object for proximity detection. OnProximityEnded . public event Action&lt;GRPLInteractable&gt; OnProximityEnded . Summary . An event that is invoked when the user is no longer close enough to the interactable object for proximity detection. Delegates . InteractableEvent . public delegate void InteractableEvent(GRPLInteractable grappleInteractable) . Arguments . | Type | Name | Description | . | GRPLInteractable | grappleInteractable |   | . Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html#details"
  },"134": {
    "doc": "Grapple Base Interactable",
    "title": "Grapple Base Interactable",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractable.html"
  },"135": {
    "doc": "Interactable Bake Settings",
    "title": "GRPLInteractableBakeSettings Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#grplinteractablebakesettings-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#grplinteractablebakesettings-public-class"
  },"136": {
    "doc": "Interactable Bake Settings",
    "title": "Description",
    "content": "This class is used to define the bake options for a GRPLInteractable object. The GRPLBakeOptions enumeration specifies the different options available. By setting the BakeOptions field to one of the available options, the behavior of the interactable object when it is baked can be controlled. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#description"
  },"137": {
    "doc": "Interactable Bake Settings",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLInteractableBakeSettings[[GRPLInteractableBakeSettings]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.GRPLInteractableBakeSettings . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#diagram"
  },"138": {
    "doc": "Interactable Bake Settings",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | GRPLBakeOptions | BakeOptionsA getter property that returns the _bakeOptions field. | get | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#members"
  },"139": {
    "doc": "Interactable Bake Settings",
    "title": "Details",
    "content": "Summary . This class is used to define the bake options for a GRPLInteractable object. The GRPLBakeOptions enumeration specifies the different options available. By setting the BakeOptions field to one of the available options, the behavior of the interactable object when it is baked can be controlled. Inheritance . | MonoBehaviour | . Constructors . GRPLInteractableBakeSettings . public GRPLInteractableBakeSettings() . Properties . BakeOptions . public GRPLBakeOptions BakeOptions { get; } . Summary . A getter property that returns the _bakeOptions field. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html#details"
  },"140": {
    "doc": "Interactable Bake Settings",
    "title": "Interactable Bake Settings",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableBakeSettings.html"
  },"141": {
    "doc": "Grapple Interactable Manager",
    "title": "GRPLInteractableManager Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#grplinteractablemanager-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#grplinteractablemanager-public-class"
  },"142": {
    "doc": "Grapple Interactable Manager",
    "title": "Description",
    "content": "This object is responsible for calculating all interactions between the hands defined by the jointManager field and all interactables in the scene that inherit from GRPLInteractable. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#description"
  },"143": {
    "doc": "Grapple Interactable Manager",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLInteractableManager[[GRPLInteractableManager]] Rhinox.XR.Grapple.It.Singleton_1[[Singleton&lt; T &gt;]] class Rhinox.XR.Grapple.It.Singleton_1 abstractStyle; Rhinox.XR.Grapple.It.Singleton_1T((T)); Rhinox.XR.Grapple.It.Singleton_1 -- where --o Rhinox.XR.Grapple.It.Singleton_1T UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.Singleton_1T end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end Rhinox.XR.Grapple.It.Singleton_1 --&gt; Rhinox.XR.Grapple.It.GRPLInteractableManager . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#diagram"
  },"144": {
    "doc": "Grapple Interactable Manager",
    "title": "Members",
    "content": "Methods . Public methods . | Returns | Name | . | void | Awake()Initializes this instance of GRPLInteractableManager. | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#members"
  },"145": {
    "doc": "Grapple Interactable Manager",
    "title": "Details",
    "content": "Summary . This object is responsible for calculating all interactions between the hands defined by the jointManager field and all interactables in the scene that inherit from GRPLInteractable. Inheritance . | Singleton &lt;GRPLInteractableManager&gt; | . Constructors . GRPLInteractableManager . public GRPLInteractableManager() . Methods . Awake . public void Awake() . Summary . Initializes this instance of GRPLInteractableManager. Events . InteractibleInteractionCheckPaused . public event Action&lt;RhinoxHand, GRPLInteractable&gt; InteractibleInteractionCheckPaused . Summary . Invoked when an interactable’s interaction check is paused. InteractibleInteractionCheckResumed . public event Action&lt;RhinoxHand, GRPLInteractable&gt; InteractibleInteractionCheckResumed . Summary . Invoked when an interactable’s interaction check is resumed. InteractibleLeftProximity . public event Action&lt;RhinoxHand, GRPLInteractable&gt; InteractibleLeftProximity . Summary . Invoked when an interactable is no longer in proximity of a hand. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html#details"
  },"146": {
    "doc": "Grapple Interactable Manager",
    "title": "Grapple Interactable Manager",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractableManager.html"
  },"147": {
    "doc": "Grapple Interactible Group",
    "title": "GRPLInteractibleGroup Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#grplinteractiblegroup-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#grplinteractiblegroup-public-class"
  },"148": {
    "doc": "Grapple Interactible Group",
    "title": "Description",
    "content": "This component defines a group of interactables that can only be interacted with one at a time. It provides functionality to enable and disable a list of interactables based on which one is currently being interacted with. It also provides the ability to filter out interactables that cannot be interacted with based on the current state of the group. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#description"
  },"149": {
    "doc": "Grapple Interactible Group",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLInteractibleGroup[[GRPLInteractibleGroup]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.GRPLInteractibleGroup . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#diagram"
  },"150": {
    "doc": "Grapple Interactible Group",
    "title": "Members",
    "content": "Methods . Public methods . | Returns | Name | . | void | FilterImpossibleInteractables(ref List&lt;GRPLInteractable&gt; otherInteractables) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#members"
  },"151": {
    "doc": "Grapple Interactible Group",
    "title": "Details",
    "content": "Summary . This component defines a group of interactables that can only be interacted with one at a time. It provides functionality to enable and disable a list of interactables based on which one is currently being interacted with. It also provides the ability to filter out interactables that cannot be interacted with based on the current state of the group. /// . Inheritance . | MonoBehaviour | . Constructors . GRPLInteractibleGroup . public GRPLInteractibleGroup() . Methods . FilterImpossibleInteractables . public void FilterImpossibleInteractables(ref List&lt;GRPLInteractable&gt; otherInteractables) . Arguments . | Type | Name | Description | . | ref List&lt;GRPLInteractable&gt; | otherInteractables |   | . Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html#details"
  },"152": {
    "doc": "Grapple Interactible Group",
    "title": "Grapple Interactible Group",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractibleGroup.html"
  },"153": {
    "doc": "Grapple Interaction State",
    "title": "GRPLInteractionState Public enum",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#grplinteractionstate-public-enum",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#grplinteractionstate-public-enum"
  },"154": {
    "doc": "Grapple Interaction State",
    "title": "Description",
    "content": "The possible states a Grapple Interactible can be in. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#description"
  },"155": {
    "doc": "Grapple Interaction State",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLInteractionState[[GRPLInteractionState]] end . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#diagram"
  },"156": {
    "doc": "Grapple Interaction State",
    "title": "Details",
    "content": "Summary . The possible states a Grapple Interactible can be in. Fields . Active . Summary . The neutral state of a grapple interactible. This means all checks can happen for the object. Proximate . Summary . This state is used when a grapple interactible is in proximity to hands. Interacted . Summary . This state is used when a hand is currently interacting with the grapple interactible. Disabled . Summary . This state is used when a grapple interactible is disabled and no proximity or interactions checks should happen. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html#details"
  },"157": {
    "doc": "Grapple Interaction State",
    "title": "Grapple Interaction State",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLInteractionState.html"
  },"158": {
    "doc": "Grapple Lever Base",
    "title": "GRPLLeverBase Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#grplleverbase-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#grplleverbase-public-class"
  },"159": {
    "doc": "Grapple Lever Base",
    "title": "Description",
    "content": "The GRPLLeverBase class is an abstract class that extends from GRPLInteractable. The class is used to derive lever-type interactable objects, and it includes additional methods and properties for that functionality. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#description"
  },"160": {
    "doc": "Grapple Lever Base",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLLeverBase[[GRPLLeverBase]] class Rhinox.XR.Grapple.It.GRPLLeverBase abstractStyle; Rhinox.XR.Grapple.It.GRPLInteractable[[GRPLInteractable]] class Rhinox.XR.Grapple.It.GRPLInteractable abstractStyle; end Rhinox.XR.Grapple.It.GRPLInteractable --&gt; Rhinox.XR.Grapple.It.GRPLLeverBase . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#diagram"
  },"161": {
    "doc": "Grapple Lever Base",
    "title": "Members",
    "content": "Methods . Protected methods . | Returns | Name | . | void | Awake()Initializes the class by setting the forced interactible joint and linking to the gesture recognizer. | . | void | DrawGrabRange()Draws the grab range of the lever in the Unity editor. | . | void | DrawLeverTransforms()Draws the transforms of the lever in the Unity editor. | . | float | GetLeverRotation(Vector3 projectedPos)Calculates and returns the current rotation of the lever based on the projected position of the hand onto the plane defined by the base position and forward direction of the lever. | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand)Returns false and logs an error message indicating that this class does not implement the functionality of an interactable. This method should be overridden in derived classes to provide specific interaction logic. | . | Transform | GetReferenceTransform()Returns the transform of the handle as the reference transform for the interactable object. | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint joint, RhinoxHand hand) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#members"
  },"162": {
    "doc": "Grapple Lever Base",
    "title": "Details",
    "content": "Summary . The GRPLLeverBase class is an abstract class that extends from GRPLInteractable. The class is used to derive lever-type interactable objects, and it includes additional methods and properties for that functionality. Inheritance . | GRPLInteractable | . Constructors . GRPLLeverBase . protected GRPLLeverBase() . Methods . Awake . protected void Awake() . Summary . Initializes the class by setting the forced interactible joint and linking to the gesture recognizer. GetLeverRotation . protected abstract float GetLeverRotation(Vector3 projectedPos) . Arguments . | Type | Name | Description | . | Vector3 | projectedPos | The reference point projected on the plane defined by the lever base position and forward. | . Summary . Calculates and returns the current rotation of the lever based on the projected position of the hand onto the plane defined by the base position and forward direction of the lever. Returns . The angle in degrees. GetReferenceTransform . public override Transform GetReferenceTransform() . Summary . Returns the transform of the handle as the reference transform for the interactable object. Returns . CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint |   | . | RhinoxHand | hand |   | . Summary . Returns false and logs an error message indicating that this class does not implement the functionality of an interactable. This method should be overridden in derived classes to provide specific interaction logic. Returns . TryGetCurrentInteractJoint . public override bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | joint |   | . | RhinoxHand | hand |   | . DrawLeverTransforms . protected void DrawLeverTransforms() . Summary . Draws the transforms of the lever in the Unity editor. DrawGrabRange . protected void DrawGrabRange() . Summary . Draws the grab range of the lever in the Unity editor. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html#details"
  },"163": {
    "doc": "Grapple Lever Base",
    "title": "Grapple Lever Base",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLLeverBase.html"
  },"164": {
    "doc": "Grapple One-Way lever",
    "title": "GRPLOneWayLever Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#grplonewaylever-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#grplonewaylever-public-class"
  },"165": {
    "doc": "Grapple One-Way lever",
    "title": "Description",
    "content": "The GRPLOneWayLever class is a subclass of GRPLLeverBase and provides functionality for one-way levers in a 3D environment. The class contains the LeverActivated and LeverStopped events for lever activation and lever stopping. Additionally, the class includes fields for debugging and drawing. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#description"
  },"166": {
    "doc": "Grapple One-Way lever",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLOneWayLever[[GRPLOneWayLever]] Rhinox.XR.Grapple.It.GRPLLeverBase[[GRPLLeverBase]] class Rhinox.XR.Grapple.It.GRPLLeverBase abstractStyle; end Rhinox.XR.Grapple.It.GRPLLeverBase --&gt; Rhinox.XR.Grapple.It.GRPLOneWayLever . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#diagram"
  },"167": {
    "doc": "Grapple One-Way lever",
    "title": "Members",
    "content": "Methods . Protected methods . | Returns | Name | . | float | GetLeverRotation(Vector3 projectedPos)Calculates the angle between the projected position of the joint and the original handle position. | . | void | Initialize()Initializes the initial handle position and rotation. | . | void | OnDrawGizmos()Draws the desired gizmos. | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand)Checks if a joint and hand are interacting with the lever. Returns true if the joint and hand are interacting with the lever, false otherwise. | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint joint, RhinoxHand hand) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#members"
  },"168": {
    "doc": "Grapple One-Way lever",
    "title": "Details",
    "content": "Summary . The GRPLOneWayLever class is a subclass of GRPLLeverBase and provides functionality for one-way levers in a 3D environment. The class contains the LeverActivated and LeverStopped events for lever activation and lever stopping. Additionally, the class includes fields for debugging and drawing. Inheritance . | GRPLLeverBase | . Constructors . GRPLOneWayLever . public GRPLOneWayLever() . Methods . GetLeverRotation . protected override float GetLeverRotation(Vector3 projectedPos) . Arguments . | Type | Name | Description | . | Vector3 | projectedPos | The position of the projected joint on the plane defined by the lever. | . Summary . Calculates the angle between the projected position of the joint and the original handle position. Returns . Initialize . protected override void Initialize() . Summary . Initializes the initial handle position and rotation. CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint | The interact joint | . | RhinoxHand | hand | The hand on which this joint resides | . Summary . Checks if a joint and hand are interacting with the lever. Returns true if the joint and hand are interacting with the lever, false otherwise. Returns . TryGetCurrentInteractJoint . public override bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | joint |   | . | RhinoxHand | hand |   | . OnDrawGizmos . protected override void OnDrawGizmos() . Summary . Draws the desired gizmos. Events . LeverActivated . public event Action&lt;GRPLOneWayLever&gt; LeverActivated . Summary . Triggered when the lever is activated. LeverStopped . public event Action&lt;GRPLOneWayLever&gt; LeverStopped . Summary . Triggered when the lever is stopped. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html#details"
  },"169": {
    "doc": "Grapple One-Way lever",
    "title": "Grapple One-Way lever",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLOneWayLever.html"
  },"170": {
    "doc": "Grapple Socketable",
    "title": "GRPLSocketable Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#grplsocketable-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#grplsocketable-public-class"
  },"171": {
    "doc": "Grapple Socketable",
    "title": "Description",
    "content": "This class inherits from the GRPLGrabbableBase class and adds the ability to have socket points for grabbing. Each hand has its own socket, so the closest socket point get correctly orientated to the hands socket. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#description"
  },"172": {
    "doc": "Grapple Socketable",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLSocketable[[GRPLSocketable]] Rhinox.XR.Grapple.It.GRPLGrabbableBase[[GRPLGrabbableBase]] end Rhinox.XR.Grapple.It.GRPLGrabbableBase --&gt; Rhinox.XR.Grapple.It.GRPLSocketable . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#diagram"
  },"173": {
    "doc": "Grapple Socketable",
    "title": "Members",
    "content": "Methods . Protected methods . | Returns | Name | . | void | GrabInternal(GameObject parent, RhinoxHand rhinoxHand)Grabs the object with the specified hand. It finds the closest socket point to the hand and orients the object relative to the parent object. | . | void | Initialize()Initializes the _maxSocketDistanceSqrd field and removes any null values from the _sockets list. | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand)Checks if a hand can interact with the object. If the hand is already holding the object, it returns whether the object is grabbed. Otherwise, it finds the closest socket point to the hand and sets a flag to allow the hand to grab the object if it is within range. | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#members"
  },"174": {
    "doc": "Grapple Socketable",
    "title": "Details",
    "content": "Summary . This class inherits from the GRPLGrabbableBase class and adds the ability to have socket points for grabbing. Each hand has its own socket, so the closest socket point get correctly orientated to the hands socket. Remarks . When the right hand grabs the object its orientation is mirrored compared to the left hand. Inheritance . | GRPLGrabbableBase | . Constructors . GRPLSocketable . public GRPLSocketable() . Methods . Initialize . protected override void Initialize() . Summary . Initializes the _maxSocketDistanceSqrd field and removes any null values from the _sockets list. CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint | The interact joint. | . | RhinoxHand | hand | The hand on which the interact joint resides. | . Summary . Checks if a hand can interact with the object. If the hand is already holding the object, it returns whether the object is grabbed. Otherwise, it finds the closest socket point to the hand and sets a flag to allow the hand to grab the object if it is within range. Returns . GrabInternal . protected override void GrabInternal(GameObject parent, RhinoxHand rhinoxHand) . Arguments . | Type | Name | Description | . | GameObject | parent | The socket target in the hand. | . | RhinoxHand | rhinoxHand | The current hand. | . Summary . Grabs the object with the specified hand. It finds the closest socket point to the hand and orients the object relative to the parent object. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html#details"
  },"175": {
    "doc": "Grapple Socketable",
    "title": "Grapple Socketable",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLSocketable.html"
  },"176": {
    "doc": "Grapple Teleport",
    "title": "GRPLTeleport Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#grplteleport-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#grplteleport-public-class"
  },"177": {
    "doc": "Grapple Teleport",
    "title": "Description",
    "content": "Teleport script that can be used with handtracking or controller. Nothing needs to be called externally when usinghandtracking, as all the internal logic takes care of that. When using it with controller, the user needs to call ‘ GRPLTeleport.ShowArc ‘ to toggle the arc visual and GRPLTeleport.CalculateTeleportLocation(UnityEngine.Ray) , where the ray is the startpoint and direction the teleport arc should go in. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#description"
  },"178": {
    "doc": "Grapple Teleport",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLTeleport[[GRPLTeleport]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.GRPLTeleport . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#diagram"
  },"179": {
    "doc": "Grapple Teleport",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | bool | IsInitializedPublic getter property for _isInitialized. | get | . | bool | IsValidTeleportPointPublic getter property for _isValidTeleportPoint. | get | . | bool | ShowArcEnable or disable the line rendering | get, set | . | Vector3 | TeleportPointPublic getter property for _avgTeleportPoint. | get | . Methods . Public methods . | Returns | Name | . | void | CalculateTeleportLocation(Ray startRay)This method takes a Ray as input and calculates the points of the teleportation arc using the initial velocity, gravity, and maximum distance. It then calls CalculateIntersectionPoint to find the intersection point between the arc and the environment. If a valid teleportation point is found, it sets _avgTeleportPoint to the average position of all the valid teleportation points, sets the position of the _teleportZoneVisual game object to _avgTeleportPoint, and sets _isValidTeleportPoint to true. Otherwise, it sets _lineRenderer’s colors to red, sets _isValidTeleportPoint to false, and clears the _teleportPositions queue. | . | void | Initialize()Initializes the Teleport system by hooking up to the GRPLJointManager events and to the GRPLGestureRecognizer teleport gesture. This also sets up the proximity sensor to the correct location and to only trigger on the the other hand. | . | bool | IsHandEnabled(RhinoxHand handedness) | . | void | SetHandEnabled(bool newState, RhinoxHand handedness) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#members"
  },"180": {
    "doc": "Grapple Teleport",
    "title": "Details",
    "content": "Summary . Teleport script that can be used with handtracking or controller. Nothing needs to be called externally when usinghandtracking, as all the internal logic takes care of that. When using it with controller, the user needs to call ‘ GRPLTeleport.ShowArc ‘ to toggle the arc visual and GRPLTeleport.CalculateTeleportLocation(UnityEngine.Ray) , where the ray is the startpoint and direction the teleport arc should go in. Remarks . Inheritance . | MonoBehaviour | . Constructors . GRPLTeleport . public GRPLTeleport() . Methods . Initialize . public void Initialize() . Summary . Initializes the Teleport system by hooking up to the GRPLJointManager events and to the GRPLGestureRecognizer teleport gesture. This also sets up the proximity sensor to the correct location and to only trigger on the the other hand. Remarks . Both GRPLJointManager AND GRPLGestureRecognizer should be initialized before calling this. CalculateTeleportLocation . public void CalculateTeleportLocation(Ray startRay) . Arguments . | Type | Name | Description | . | Ray | startRay | Ray that gives a start point and direction the teleport arc should go in | . Summary . This method takes a Ray as input and calculates the points of the teleportation arc using the initial velocity, gravity, and maximum distance. It then calls CalculateIntersectionPoint to find the intersection point between the arc and the environment. If a valid teleportation point is found, it sets _avgTeleportPoint to the average position of all the valid teleportation points, sets the position of the _teleportZoneVisual game object to _avgTeleportPoint, and sets _isValidTeleportPoint to true. Otherwise, it sets _lineRenderer’s colors to red, sets _isValidTeleportPoint to false, and clears the _teleportPositions queue. SetHandEnabled . public void SetHandEnabled(bool newState, RhinoxHand handedness) . Arguments . | Type | Name | Description | . | bool | newState |   | . | RhinoxHand | handedness |   | . IsHandEnabled . public bool IsHandEnabled(RhinoxHand handedness) . Arguments . | Type | Name | Description | . | RhinoxHand | handedness |   | . Properties . ShowArc . public bool ShowArc { get; set; } . Summary . Enable or disable the line rendering . IsInitialized . public bool IsInitialized { get; } . Summary . Public getter property for _isInitialized. IsValidTeleportPoint . public bool IsValidTeleportPoint { get; } . Summary . Public getter property for _isValidTeleportPoint. TeleportPoint . public Vector3 TeleportPoint { get; } . Summary . Public getter property for _avgTeleportPoint. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html#details"
  },"181": {
    "doc": "Grapple Teleport",
    "title": "Grapple Teleport",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleport.html"
  },"182": {
    "doc": "Grapple Teleport Anchor",
    "title": "GRPLTeleportAnchor Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html#grplteleportanchor-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html#grplteleportanchor-public-class"
  },"183": {
    "doc": "Grapple Teleport Anchor",
    "title": "Description",
    "content": "This class is a simple script that is used to make an object become a snappable teleport anchor. When this script is added to an object, it will supply the transform for the teleport location of the anchor. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html#description"
  },"184": {
    "doc": "Grapple Teleport Anchor",
    "title": "Members",
    "content": "| Type | Name | Methods | . | bool | AnchorTransformPublic getter property for _anchorPointTransform. | get | . Properties . Summary . Returns the transform of the anchor point. AnchorTransform . public bool AnchorTransform { get; } . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html#members"
  },"185": {
    "doc": "Grapple Teleport Anchor",
    "title": "Grapple Teleport Anchor",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTeleportAnchor.html"
  },"186": {
    "doc": "Grapple Trigger Sensor",
    "title": "GRPLTriggerSensor Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#grpltriggersensor-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#grpltriggersensor-public-class"
  },"187": {
    "doc": "Grapple Trigger Sensor",
    "title": "Description",
    "content": "A simple trigger sensor that detects if a Rhinox hand has entered/exited it. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#description"
  },"188": {
    "doc": "Grapple Trigger Sensor",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLTriggerSensor[[GRPLTriggerSensor]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.GRPLTriggerSensor . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#diagram"
  },"189": {
    "doc": "Grapple Trigger Sensor",
    "title": "Members",
    "content": "Methods . Public methods . | Returns | Name | . | void | AddListenerOnSensorEnter(UnityAction action)A public method that takes a UnityAction parameter and adds it to the OnSensorEnter event’s invocation list. If the event is null, it instantiates a new UnityEvent. | . | void | AddListenerOnSensorExit(UnityAction action)A public method that takes a UnityAction parameter and adds it to the OnSensorExit event’s invocation list. If the event is null, it instantiates a new UnityEvent. | . | void | InvokeOnSensorEnter()A public method that invokes the OnSensorEnter event. | . | void | InvokeOnSensorExit()A public method that invokes the OnSensorExit event. | . | void | RemoveAllListenersOnSensorEnter()A public method that removes all listeners from the OnSensorEnter event’s invocation list. | . | void | RemoveAllListenersOnSensorExit()A public method that removes all listeners from the OnSensorExit event’s invocation list. | . | void | RemoveListenerOnSensorEnter(UnityAction action)A public method that removes a UnityAction parameter from the OnSensorEnter event’s invocation list. | . | void | RemoveListenerOnSensorExit(UnityAction action)A public method that removes a UnityAction parameter from the OnSensorExit event’s invocation list. | . | void | SetIgnoreList(RhinoxJointCapsule[] rhinoxJoinCapsules)A public method that takes an array of RhinoxJointCapsule objects and sets them to be ignored from triggering the sensor. | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#members"
  },"190": {
    "doc": "Grapple Trigger Sensor",
    "title": "Details",
    "content": "Summary . A simple trigger sensor that detects if a Rhinox hand has entered/exited it. Remarks . Inheritance . | MonoBehaviour | . Constructors . GRPLTriggerSensor . public GRPLTriggerSensor() . Methods . SetIgnoreList . public void SetIgnoreList(RhinoxJointCapsule[] rhinoxJoinCapsules) . Arguments . | Type | Name | Description | . | RhinoxJointCapsule[] | rhinoxJoinCapsules | Array of RhinoxJointCapsule gotten from GRPLJointManager | . Summary . A public method that takes an array of RhinoxJointCapsule objects and sets them to be ignored from triggering the sensor. AddListenerOnSensorEnter . public void AddListenerOnSensorEnter(UnityAction action) . Arguments . | Type | Name | Description | . | UnityAction | action | The UnityAction to add. | . Summary . A public method that takes a UnityAction parameter and adds it to the OnSensorEnter event’s invocation list. If the event is null, it instantiates a new UnityEvent. RemoveListenerOnSensorEnter . public void RemoveListenerOnSensorEnter(UnityAction action) . Arguments . | Type | Name | Description | . | UnityAction | action | The UnityAction to remove. | . Summary . A public method that removes a UnityAction parameter from the OnSensorEnter event’s invocation list. RemoveAllListenersOnSensorEnter . public void RemoveAllListenersOnSensorEnter() . Summary . A public method that removes all listeners from the OnSensorEnter event’s invocation list. InvokeOnSensorEnter . public void InvokeOnSensorEnter() . Summary . A public method that invokes the OnSensorEnter event. AddListenerOnSensorExit . public void AddListenerOnSensorExit(UnityAction action) . Arguments . | Type | Name | Description | . | UnityAction | action | The UnityAction to add. | . Summary . A public method that takes a UnityAction parameter and adds it to the OnSensorExit event’s invocation list. If the event is null, it instantiates a new UnityEvent. RemoveListenerOnSensorExit . public void RemoveListenerOnSensorExit(UnityAction action) . Arguments . | Type | Name | Description | . | UnityAction | action | The UnityAction to remove. | . Summary . A public method that removes a UnityAction parameter from the OnSensorExit event’s invocation list. RemoveAllListenersOnSensorExit . public void RemoveAllListenersOnSensorExit() . Summary . A public method that removes all listeners from the OnSensorExit event’s invocation list. InvokeOnSensorExit . public void InvokeOnSensorExit() . Summary . A public method that invokes the OnSensorExit event. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html#details"
  },"191": {
    "doc": "Grapple Trigger Sensor",
    "title": "Grapple Trigger Sensor",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTriggerSensor.html"
  },"192": {
    "doc": "Grapple Two-Way lever",
    "title": "GRPLTwoWayLever Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#grpltwowaylever-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#grpltwowaylever-public-class"
  },"193": {
    "doc": "Grapple Two-Way lever",
    "title": "Description",
    "content": "The GRPLOneWayLever class is a subclass of GRPLLeverBase and provides functionality for two-way levers in a 3D environment. It has four events (LeverForwardActivated, LeverForwardStopped, LeverBackwardActivated, LeverBackwardStopped) to notify when the lever is activated or stopped in either direction. It also has some properties that can be used for debugging. The OnValidate method is used to set the minimum angle that the lever can move, while the Update method is used to update the lever’s rotation and process the current angle. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#description"
  },"194": {
    "doc": "Grapple Two-Way lever",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLTwoWayLever[[GRPLTwoWayLever]] Rhinox.XR.Grapple.It.GRPLLeverBase[[GRPLLeverBase]] class Rhinox.XR.Grapple.It.GRPLLeverBase abstractStyle; end Rhinox.XR.Grapple.It.GRPLLeverBase --&gt; Rhinox.XR.Grapple.It.GRPLTwoWayLever . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#diagram"
  },"195": {
    "doc": "Grapple Two-Way lever",
    "title": "Members",
    "content": "Methods . Protected methods . | Returns | Name | . | float | GetLeverRotation(Vector3 projectedPos)Calculates the angle of the lever based on the projected joint position. | . | void | Initialize()Initializes the lever. | . | void | OnDrawGizmos() | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand)Checks if the given RhinoxJoint and RhinoxHand are interacting with the lever. | . | Transform | GetReferenceTransform()Returns the transform of the handle. | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint joint, RhinoxHand hand) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#members"
  },"196": {
    "doc": "Grapple Two-Way lever",
    "title": "Details",
    "content": "Summary . The GRPLOneWayLever class is a subclass of GRPLLeverBase and provides functionality for two-way levers in a 3D environment. It has four events (LeverForwardActivated, LeverForwardStopped, LeverBackwardActivated, LeverBackwardStopped) to notify when the lever is activated or stopped in either direction. It also has some properties that can be used for debugging. The OnValidate method is used to set the minimum angle that the lever can move, while the Update method is used to update the lever’s rotation and process the current angle. Inheritance . | GRPLLeverBase | . Constructors . GRPLTwoWayLever . public GRPLTwoWayLever() . Methods . Initialize . protected override void Initialize() . Summary . Initializes the lever. GetLeverRotation . protected override float GetLeverRotation(Vector3 projectedPos) . Arguments . | Type | Name | Description | . | Vector3 | projectedPos | The projected joint position | . Summary . Calculates the angle of the lever based on the projected joint position. Returns . GetReferenceTransform . public override Transform GetReferenceTransform() . Summary . Returns the transform of the handle. Returns . CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint | The interact joint. | . | RhinoxHand | hand | The hand on which this joint resides. | . Summary . Checks if the given RhinoxJoint and RhinoxHand are interacting with the lever. Returns . TryGetCurrentInteractJoint . public override bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | joint |   | . | RhinoxHand | hand |   | . OnDrawGizmos . protected override void OnDrawGizmos() . Events . LeverForwardActivated . public event Action&lt;GRPLTwoWayLever&gt; LeverForwardActivated . Summary . An event that is raised when the lever is activated in the forward direction. LeverForwardStopped . public event Action&lt;GRPLTwoWayLever&gt; LeverForwardStopped . Summary . An event that is raised when the lever is stopped in the forward direction. LeverBackwardActivated . public event Action&lt;GRPLTwoWayLever&gt; LeverBackwardActivated . Summary . An event that is raised when the lever is activated in the backward direction. LeverBackwardStopped . public event Action&lt;GRPLTwoWayLever&gt; LeverBackwardStopped . Summary . An event that is raised when the lever is stopped in the backward direction. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html#details"
  },"197": {
    "doc": "Grapple Two-Way lever",
    "title": "Grapple Two-Way lever",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLTwoWayLever.html"
  },"198": {
    "doc": "Grapple UI Slider",
    "title": "GRPLUISliderInteractable Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#grpluisliderinteractable-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#grpluisliderinteractable-public-class"
  },"199": {
    "doc": "Grapple UI Slider",
    "title": "Description",
    "content": "This class represents an interactable slider. It derives from GRPLInteractable, and it contains properties and methods to handle interaction with a hands. It also extends the basic functionality of a Unity Slider component to add hand tracking specific features. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#description"
  },"200": {
    "doc": "Grapple UI Slider",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLUISliderInteractable[[GRPLUISliderInteractable]] Rhinox.XR.Grapple.It.GRPLInteractable[[GRPLInteractable]] class Rhinox.XR.Grapple.It.GRPLInteractable abstractStyle; end Rhinox.XR.Grapple.It.GRPLInteractable --&gt; Rhinox.XR.Grapple.It.GRPLUISliderInteractable . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#diagram"
  },"201": {
    "doc": "Grapple UI Slider",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | float | SliderValueA float property that returns the current value of the slider. | get | . Methods . Protected methods . | Returns | Name | . | void | Initialize()This method initializes the slider’s components and sets its initial values. | . | void | InteractStarted() | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand)This method checks whether a given RhinoxJoint is interacting with the slider. It returns a boolean value that indicates whether the interaction is successful. | . | Transform | GetReferenceTransform()This method returns the Transform component of the slider’s handle. | . | bool | ShouldInteractionCheckStop() | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#members"
  },"202": {
    "doc": "Grapple UI Slider",
    "title": "Details",
    "content": "Summary . This class represents an interactable slider. It derives from GRPLInteractable, and it contains properties and methods to handle interaction with a hands. It also extends the basic functionality of a Unity Slider component to add hand tracking specific features. Remarks . Inheritance . | GRPLInteractable | . Constructors . GRPLUISliderInteractable . public GRPLUISliderInteractable() . Methods . Initialize . protected override void Initialize() . Summary . This method initializes the slider’s components and sets its initial values. GetReferenceTransform . public override Transform GetReferenceTransform() . Summary . This method returns the Transform component of the slider’s handle. Returns . The Transform component of the slider’s handle. CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint | The interaction joint. | . | RhinoxHand | hand | The hand on which this joint resides | . Summary . This method checks whether a given RhinoxJoint is interacting with the slider. It returns a boolean value that indicates whether the interaction is successful. Returns . Whether the interaction is successful . TryGetCurrentInteractJoint . public override bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | outJoint |   | . | RhinoxHand | hand |   | . ShouldInteractionCheckStop . public override bool ShouldInteractionCheckStop() . InteractStarted . protected override void InteractStarted() . Properties . SliderValue . public float SliderValue { get; } . Summary . A float property that returns the current value of the slider. Events . OnValueUpdate . public event Action&lt;float&gt; OnValueUpdate . Summary . An event that is triggered whenever the slider’s value is updated. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html#details"
  },"203": {
    "doc": "Grapple UI Slider",
    "title": "Grapple UI Slider",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLUISliderInteractable.html"
  },"204": {
    "doc": "Grapple Valve",
    "title": "GRPLValve Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#grplvalve-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#grplvalve-public-class"
  },"205": {
    "doc": "Grapple Valve",
    "title": "Description",
    "content": "This class represents a valve that can be interacted with in a hand tracking context. It extends the GRPLInteractable class. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#description"
  },"206": {
    "doc": "Grapple Valve",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GRPLValve[[GRPLValve]] Rhinox.XR.Grapple.It.GRPLInteractable[[GRPLInteractable]] class Rhinox.XR.Grapple.It.GRPLInteractable abstractStyle; end Rhinox.XR.Grapple.It.GRPLInteractable --&gt; Rhinox.XR.Grapple.It.GRPLValve . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#diagram"
  },"207": {
    "doc": "Grapple Valve",
    "title": "Members",
    "content": "Properties . Public properties . | Type | Name | Methods | . | float | CurrentValveRotationThe current angle of the valve. | get | . | bool | IsGrabbedWhether or not the valve is currently being grabbed. | get, protected set | . Methods . Protected methods . | Returns | Name | . | void | Awake()Sets _forceInteractibleJoint to true and sets the correct _forcedInteractJointID. | . | void | Initialize()This method initializes the valve’s rotation, minimum and maximum grab radii and checks if the visualTransform variable is not null. | . | void | InteractStopped() | . | void | OnDisable()Unsubscribes the needed events. | . | void | OnDrawGizmos() | . | void | OnEnable()Subscribes the needed events. | . Public methods . | Returns | Name | . | bool | CheckForInteraction(RhinoxJoint joint, RhinoxHand hand)This method checks if a joint is within range of the valve and if it is in a proper gesture state to grab the valve. If so, it returns true, else false. | . | bool | TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) | . | void | TryGrab(RhinoxHand hand)Function that allows external code to grab the valve if given hand is in range. | . | void | TryLetGo(RhinoxHand hand)Function that allows external code to grab the valve if given hand is the hand that is interacting with it. | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#members"
  },"208": {
    "doc": "Grapple Valve",
    "title": "Details",
    "content": "Summary . This class represents a valve that can be interacted with in a hand tracking context. It extends the GRPLInteractable class. Remarks . Only one hand can interact with it at the same time. Turning the valve clockwise is considered to be closing the valve. Turning the valve counter-clockwise is considered to be opening the valve. Inheritance . | GRPLInteractable | . Constructors . GRPLValve . public GRPLValve() . Methods . Awake . protected void Awake() . Summary . Sets _forceInteractibleJoint to true and sets the correct _forcedInteractJointID. Initialize . protected override void Initialize() . Summary . This method initializes the valve’s rotation, minimum and maximum grab radii and checks if the visualTransform variable is not null. OnEnable . protected override void OnEnable() . Summary . Subscribes the needed events. OnDisable . protected override void OnDisable() . Summary . Unsubscribes the needed events. CheckForInteraction . public override bool CheckForInteraction(RhinoxJoint joint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxJoint | joint | The interaction joint. | . | RhinoxHand | hand | The hand on which this joint resides | . Summary . This method checks if a joint is within range of the valve and if it is in a proper gesture state to grab the valve. If so, it returns true, else false. Returns . Whether the interaction is successful . TryGetCurrentInteractJoint . public override bool TryGetCurrentInteractJoint(ICollection&lt;RhinoxJoint&gt; joints, out RhinoxJoint outJoint, RhinoxHand hand) . Arguments . | Type | Name | Description | . | ICollection&lt;RhinoxJoint&gt; | joints |   | . | out RhinoxJoint | outJoint |   | . | RhinoxHand | hand |   | . InteractStopped . protected override void InteractStopped() . TryGrab . public void TryGrab(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand | The hand that will be used to grab and interact with the valve. | . Summary . Function that allows external code to grab the valve if given hand is in range. TryLetGo . public void TryLetGo(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand | The hand that should try to let go of the valve. | . Summary . Function that allows external code to grab the valve if given hand is the hand that is interacting with it. OnDrawGizmos . protected override void OnDrawGizmos() . Properties . IsGrabbed . public bool IsGrabbed { get; protected set; } . Summary . Whether or not the valve is currently being grabbed. CurrentValveRotation . public float CurrentValveRotation { get; } . Summary . The current angle of the valve. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html#details"
  },"209": {
    "doc": "Grapple Valve",
    "title": "Grapple Valve",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GRPLValve.html"
  },"210": {
    "doc": "Gizmo Extensions",
    "title": "GizmoExtensions Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#gizmoextensions-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#gizmoextensions-public-class"
  },"211": {
    "doc": "Gizmo Extensions",
    "title": "Description",
    "content": "This utility class provides extension methods for drawing various geometrical shapes as gizmos. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#description"
  },"212": {
    "doc": "Gizmo Extensions",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.GizmoExtensions[[GizmoExtensions]] end . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#diagram"
  },"213": {
    "doc": "Gizmo Extensions",
    "title": "Members",
    "content": "Methods . Public Static methods . | Returns | Name | . | void | DrawSolidAnnulus(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, bool force2Sided, int segments)Draws a solid annulus arc (a solid ring segment) using Gizmos in the scene view. | . | void | DrawSolidAnnulusArc(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, float angle, bool force2Sided, int segments)Draws a filled Annulus (2D flat donut) arc in 3D space. | . | void | DrawSolidAnnulusWidth(Vector3 center, Vector3 direction, Vector3 forwardVec, float centerR, float halfWidth, bool force2Sided, int segments)Draws a filled Annulus (2D flat donut) in 3D space. | . | void | DrawSolidArc(Vector3 arcCenter, Vector3 direction, Vector3 arcNormal, float arcRadius, float arcAngle, bool force2Sided, int segments)Draws a solid arc using Gizmos in the scene view. | . | void | DrawSolidCircle(Vector3 circleCenter, Vector3 direction, Vector3 circleNormal, float circleRadius, bool force2Sided, int segments)Draw a filled circle gizmo in 3D space. | . | void | DrawSolidTorus(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, int segmentsInner, int segmentsOuter)Draws a solid torus using Gizmos in the scene view. | . | void | DrawWireArc(Vector3 arcCenter, Vector3 direction, Vector3 arcNormal, float arcRadius, float arcAngle, int segments)This method draws a wireframe arc using Gizmos in the scene view | . | void | DrawWireCircle(Vector3 circleCenter, Vector3 direction, Vector3 circleNormal, float circleRadius, int segments)Draws a wireframe circle using Gizmos in the scene view. | . | void | DrawWireTorus(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, int segmentsInner, int segmentsOuter)Draws a wire torus using Gizmos in the scene view. | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#members"
  },"214": {
    "doc": "Gizmo Extensions",
    "title": "Details",
    "content": "Summary . This utility class provides extension methods for drawing various geometrical shapes as gizmos. Methods . DrawWireArc . public static void DrawWireArc(Vector3 arcCenter, Vector3 direction, Vector3 arcNormal, float arcRadius, float arcAngle, int segments) . Arguments . | Type | Name | Description | . | Vector3 | arcCenter | The center point of the arc | . | Vector3 | direction | The initial direction in which the arc will be drawn. | . | Vector3 | arcNormal | A perpendicular vector to the plane in which the arc lies. | . | float | arcRadius | The radius of the arc. | . | float | arcAngle | Specifies the angle, in degrees, that the arc spans. | . | int | segments | Specifies the number of line segments used to draw the arc (default is 10). | . Summary . This method draws a wireframe arc using Gizmos in the scene view . Remarks . The direction and arcNormal should be normalized otherwise the circle will be drawn incorrectly. DrawSolidArc . public static void DrawSolidArc(Vector3 arcCenter, Vector3 direction, Vector3 arcNormal, float arcRadius, float arcAngle, bool force2Sided, int segments) . Arguments . | Type | Name | Description | . | Vector3 | arcCenter | The center point of the arc | . | Vector3 | direction | The initial direction in which the arc will be drawn. | . | Vector3 | arcNormal | A perpendicular vector to the plane in which the arc lies. | . | float | arcRadius | The radius of the arc. | . | float | arcAngle | Specifies the angle, in degrees, that the arc spans. | . | bool | force2Sided | Optional parameter specifying if the arc will be visible from both sides of the normal (basically no culling). | . | int | segments | Specifies the number of line segments used to draw the arc (default is 10). | . Summary . Draws a solid arc using Gizmos in the scene view. Remarks . The direction and arcNormal should be normalized otherwise the circle will be drawn incorrectly. DrawWireCircle . public static void DrawWireCircle(Vector3 circleCenter, Vector3 direction, Vector3 circleNormal, float circleRadius, int segments) . Arguments . | Type | Name | Description | . | Vector3 | circleCenter | The center point of the circle in world space. | . | Vector3 | direction | Specifies the initial direction in which the circle is drawn. | . | Vector3 | circleNormal | A perpendicular vector to the plane in which the circle lies. | . | float | circleRadius | The radius of the circle. | . | int | segments | Specifies the number of line segments used to draw the arc (default is 10). | . Summary . Draws a wireframe circle using Gizmos in the scene view. Remarks . The direction and circleNormal should be normalized otherwise the circle will be drawn incorrectly. DrawSolidCircle . public static void DrawSolidCircle(Vector3 circleCenter, Vector3 direction, Vector3 circleNormal, float circleRadius, bool force2Sided, int segments) . Arguments . | Type | Name | Description | . | Vector3 | circleCenter | The center point of the circle in world space. | . | Vector3 | direction | Specifies the initial direction in which the circle is drawn. | . | Vector3 | circleNormal | A perpendicular vector to the plane in which the circle lies. | . | float | circleRadius | The radius of the circle. | . | bool | force2Sided | Optional parameter specifying if the circle will be visible from both sides of the normal (basically no culling). | . | int | segments | Specifies the number of line segments used to draw the arc (default is 10). | . Summary . Draw a filled circle gizmo in 3D space. Remarks . The direction and circleNormal should be normalized otherwise the circle will be drawn incorrectly. DrawSolidAnnulusArc . public static void DrawSolidAnnulusArc(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, float angle, bool force2Sided, int segments) . Arguments . | Type | Name | Description | . | Vector3 | center | The center point of the annulus arc in world space. | . | Vector3 | direction | The direction of where the annulus arc start point is. | . | Vector3 | forwardVec | The normal of the plane the annulus is on. | . | float | innerR | The radius of the annulus’s inner border. | . | float | outerR | The radius of the annulus’s outer border. | . | float | angle | The angle of the annulus arc in degrees. | . | bool | force2Sided | Optional parameter specifying if the annulus will be visible from both sides of the normal (basically no culling). | . | int | segments | Specifies the number of line segments used to draw the arc (default is 12). | . Summary . Draws a filled Annulus (2D flat donut) arc in 3D space. Remarks . DOES NOT DO ARC, STILL CLOSES The direction and forwardVec should be normalized otherwise the circle will be drawn incorrectly. segments cannot go below 3, as 3 is the minimum to make a triangle. DrawSolidAnnulus . public static void DrawSolidAnnulus(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, bool force2Sided, int segments) . Arguments . | Type | Name | Description | . | Vector3 | center | The center point of the annulus in world space. | . | Vector3 | direction | The initial direction in which the annulus is drawn. | . | Vector3 | forwardVec | A vector that defines the plane in which the annulus lies. | . | float | innerR | The radius of the annulus’s inner border. | . | float | outerR | The radius of the annulus’s outer border. | . | bool | force2Sided | Optional parameter specifying if the annulus will be visible from both sides of the normal (basically no culling). | . | int | segments | Specifies the number of line segments used to draw the arc (default is 12). | . Summary . Draws a solid annulus arc (a solid ring segment) using Gizmos in the scene view. Remarks . The direction and forwardVec should be normalized otherwise the circle will be drawn incorrectly. DrawSolidAnnulusWidth . public static void DrawSolidAnnulusWidth(Vector3 center, Vector3 direction, Vector3 forwardVec, float centerR, float halfWidth, bool force2Sided, int segments) . Arguments . | Type | Name | Description | . | Vector3 | center | The center point of the annulus in worldspace. | . | Vector3 | direction | The initial direction in which the annulus is drawn. | . | Vector3 | forwardVec | A vector that defines the plane in which the annulus lies. | . | float | centerR | The radius of the annulus’s. | . | float | halfWidth | The half width of the filled part of annulus. | . | bool | force2Sided | Optional parameter specifying if the annulus will be visible from both sides of the normal (basically no culling). | . | int | segments | Specifies the number of line segments used to draw the arc (default is 12). | . Summary . Draws a filled Annulus (2D flat donut) in 3D space. Remarks . The direction and forwardVec should be normalized otherwise the circle will be drawn incorrectly. DrawSolidTorus . public static void DrawSolidTorus(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, int segmentsInner, int segmentsOuter) . Arguments . | Type | Name | Description | . | Vector3 | center | The center point of the torus in worlds pace. | . | Vector3 | direction | The direction of where the torus start point is. | . | Vector3 | forwardVec | The normal of the plane the torus is on. | . | float | innerR | The radius of the annulus’s inner border. | . | float | outerR | The radius of the annulus’s outer border. | . | int | segmentsInner | Optional parameter specifying the number of line segments that will be used to draw the loop around the given normal. | . | int | segmentsOuter | Optional parameter specifying the number of line segments that will be used to draw the loop of each segment. | . Summary . Draws a solid torus using Gizmos in the scene view. Remarks . The direction and forwardVec should be normalized otherwise the circle will be drawn incorrectly. segmentsInner and segmentsOuter cannot go below 3, as 3 is the minimum to make a triangle. DrawWireTorus . public static void DrawWireTorus(Vector3 center, Vector3 direction, Vector3 forwardVec, float innerR, float outerR, int segmentsInner, int segmentsOuter) . Arguments . | Type | Name | Description | . | Vector3 | center | The center point of the torus in worlds pace. | . | Vector3 | direction | The direction of where the torus start point is. | . | Vector3 | forwardVec | The normal of the plane the torus is on. | . | float | innerR | The radius of the annulus’s inner border. | . | float | outerR | The radius of the annulus’s outer border. | . | int | segmentsInner | Optional parameter specifying the number of line segments that will be used to draw the loop around the given normal. | . | int | segmentsOuter | Optional parameter specifying the number of line segments that will be used to draw the loop of each segment. | . Summary . Draws a wire torus using Gizmos in the scene view. Remarks . The direction and forwardVec should be normalized otherwise the circle will be drawn incorrectly. segmentsInner and segmentsOuter cannot go below 3, as 3 is the minimum to make a triangle. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html#details"
  },"215": {
    "doc": "Gizmo Extensions",
    "title": "Gizmo Extensions",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-GizmoExtensions.html"
  },"216": {
    "doc": "Interactable Math Utils",
    "title": "InteractableMathUtils Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#interactablemathutils-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#interactablemathutils-public-class"
  },"217": {
    "doc": "Interactable Math Utils",
    "title": "Description",
    "content": "A static class that contains useful 3D math functions for working with interactable objects. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#description"
  },"218": {
    "doc": "Interactable Math Utils",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.InteractableMathUtils[[InteractableMathUtils]] end . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#diagram"
  },"219": {
    "doc": "Interactable Math Utils",
    "title": "Members",
    "content": "Methods . Public Static methods . | Returns | Name | . | float | GetProjectedDistanceFromPointOnNormal(Vector3 projectPoint, Vector3 normalPoint, Vector3 normal)Calculates the projected distance of point “projectPoint” and “normalPoint” along the normal vector “normal”. | . | bool | IsPlaneProjectedPointInBounds(Vector3 point, Vector3 planePosition, Vector3 planeNormal, Bounds bounds)Checks whether the projected position of the given point on the plane (defined by the planePosition and PlaneForward) is within the given bounds. | . | bool | IsPointCloserThanOtherPoint(Vector3 referencePoint, Vector3 p1, Vector3 p2)Checks if point p1 is closer to the interactible than point p2. | . | bool | IsPositionInFrontOfPlane(Vector3 pos, Vector3 planePosition, Vector3 planeNormal)Checks if the given position is in front of given plane. The plane is defined with a point and forward vector. | . | Vector3 | ProjectOnPlaneAndTranslate(Vector3 point, Vector3 planePosition, Vector3 planeNormal)Projects the given point onto a plane defined by a position and normal vector, and then translates the result by the position of the plane. | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#members"
  },"220": {
    "doc": "Interactable Math Utils",
    "title": "Details",
    "content": "Summary . A static class that contains useful 3D math functions for working with interactable objects. Methods . ProjectOnPlaneAndTranslate . public static Vector3 ProjectOnPlaneAndTranslate(Vector3 point, Vector3 planePosition, Vector3 planeNormal) . Arguments . | Type | Name | Description | . | Vector3 | point | The point to project. | . | Vector3 | planePosition | A point on the desired plane. | . | Vector3 | planeNormal | The normal vector of the desired plane. | . Summary . Projects the given point onto a plane defined by a position and normal vector, and then translates the result by the position of the plane. Returns . The projected point, translated by the position of the plane. IsPositionInFrontOfPlane . public static bool IsPositionInFrontOfPlane(Vector3 pos, Vector3 planePosition, Vector3 planeNormal) . Arguments . | Type | Name | Description | . | Vector3 | pos | The position to check | . | Vector3 | planePosition | A point on the desired plane | . | Vector3 | planeNormal | The normal of the desired plane | . Summary . Checks if the given position is in front of given plane. The plane is defined with a point and forward vector. Returns . IsPlaneProjectedPointInBounds . public static bool IsPlaneProjectedPointInBounds(Vector3 point, Vector3 planePosition, Vector3 planeNormal, Bounds bounds) . Arguments . | Type | Name | Description | . | Vector3 | point | The point to project. | . | Vector3 | planePosition | A point on the desired plane | . | Vector3 | planeNormal | The normal of the desired plane | . | Bounds | bounds | The bounds to check | . Summary . Checks whether the projected position of the given point on the plane (defined by the planePosition and PlaneForward) is within the given bounds. Returns . GetProjectedDistanceFromPointOnNormal . public static float GetProjectedDistanceFromPointOnNormal(Vector3 projectPoint, Vector3 normalPoint, Vector3 normal) . Arguments . | Type | Name | Description | . | Vector3 | projectPoint | The point to project | . | Vector3 | normalPoint | The reference point on the normal vector | . | Vector3 | normal | The normal vector to project on | . Summary . Calculates the projected distance of point “projectPoint” and “normalPoint” along the normal vector “normal”. Returns . A scalar float value representing the projected distance . IsPointCloserThanOtherPoint . public static bool IsPointCloserThanOtherPoint(Vector3 referencePoint, Vector3 p1, Vector3 p2) . Arguments . | Type | Name | Description | . | Vector3 | referencePoint | The main point | . | Vector3 | p1 | The first point | . | Vector3 | p2 | The second point | . Summary . Checks if point p1 is closer to the interactible than point p2. Returns . A boolean representing whether the point is closer or not. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html#details"
  },"221": {
    "doc": "Interactable Math Utils",
    "title": "Interactable Math Utils",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-InteractableMathUtils.html"
  },"222": {
    "doc": "Mesh Baker",
    "title": "MeshBaker Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#meshbaker-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#meshbaker-public-class"
  },"223": {
    "doc": "Mesh Baker",
    "title": "Description",
    "content": "This component contains functionality to bake a mesh. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#description"
  },"224": {
    "doc": "Mesh Baker",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.MeshBaker[[MeshBaker]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.MeshBaker . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#diagram"
  },"225": {
    "doc": "Mesh Baker",
    "title": "Members",
    "content": "Methods . Public methods . | Returns | Name | . | void | BakeMesh(RhinoxHand hand, bool disableRenderer)Bakes the meshes for the given hand. If disableRenderer is true, the original hand will not be rendered. | . | void | BakeMeshAndParentToTransform(RhinoxHand hand, Transform parent, bool disableRenderer)Bakes the meshes for the given hand and parents them to the specified Transform. If disableRenderer is true, the original hand will not be rendered. | . | void | DestroyBakedObjects(RhinoxHand hand)Destroys all baked meshes for the given hand on this MeshBaker. | . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#members",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#members"
  },"226": {
    "doc": "Mesh Baker",
    "title": "Details",
    "content": "Summary . This component contains functionality to bake a mesh. Inheritance . | MonoBehaviour | . Constructors . MeshBaker . public MeshBaker() . Methods . BakeMesh . public void BakeMesh(RhinoxHand hand, bool disableRenderer) . Arguments . | Type | Name | Description | . | RhinoxHand | hand | The hand to bake. | . | bool | disableRenderer | Optional parameter to specify if the original hand should continue rendering. | . Summary . Bakes the meshes for the given hand. If disableRenderer is true, the original hand will not be rendered. BakeMeshAndParentToTransform . public void BakeMeshAndParentToTransform(RhinoxHand hand, Transform parent, bool disableRenderer) . Arguments . | Type | Name | Description | . | RhinoxHand | hand | The hand to bake. | . | Transform | parent | The transform to parent the baked mesh to. | . | bool | disableRenderer | Optional parameter to specify if the original hand should continue rendering. | . Summary . Bakes the meshes for the given hand and parents them to the specified Transform. If disableRenderer is true, the original hand will not be rendered. DestroyBakedObjects . public void DestroyBakedObjects(RhinoxHand hand) . Arguments . | Type | Name | Description | . | RhinoxHand | hand |   | . Summary . Destroys all baked meshes for the given hand on this MeshBaker. Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html#details"
  },"227": {
    "doc": "Mesh Baker",
    "title": "Mesh Baker",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBaker.html"
  },"228": {
    "doc": "Interactable Manager Mesh Baker Link",
    "title": "MeshBakerInteractibleManagerLink Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#meshbakerinteractiblemanagerlink-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#meshbakerinteractiblemanagerlink-public-class"
  },"229": {
    "doc": "Interactable Manager Mesh Baker Link",
    "title": "Description",
    "content": "Links the GRPLInteractableManager to the MeshBaker component. This script is used to bake the current mesh when the GRPLInteractableManager freezes an interaction check. It subscribes to events from the GRPLInteractableManager to pause and resume interactables, and to track interactables that are currently paused. The class also provides a default bake option for cases where the GRPLInteractableBakeSettings component is not found. When an interactible is paused, the script uses the bake option specified in the interactables GRPLInteractableBakeSettings component to bake the mesh using the MeshBaker component. When the interactible is resumed or left proximity, the baked mesh is destroyed. ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#description",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#description"
  },"230": {
    "doc": "Interactable Manager Mesh Baker Link",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.MeshBakerInteractibleManagerLink[[MeshBakerInteractibleManagerLink]] end subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.MeshBakerInteractibleManagerLink . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#diagram"
  },"231": {
    "doc": "Interactable Manager Mesh Baker Link",
    "title": "Details",
    "content": "Summary . Links the GRPLInteractableManager to the MeshBaker component. This script is used to bake the current mesh when the GRPLInteractableManager freezes an interaction check. It subscribes to events from the GRPLInteractableManager to pause and resume interactables, and to track interactables that are currently paused. The class also provides a default bake option for cases where the GRPLInteractableBakeSettings component is not found. When an interactible is paused, the script uses the bake option specified in the interactables GRPLInteractableBakeSettings component to bake the mesh using the MeshBaker component. When the interactible is resumed or left proximity, the baked mesh is destroyed. Inheritance . | MonoBehaviour | . Constructors . MeshBakerInteractibleManagerLink . public MeshBakerInteractibleManagerLink() . Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html#details"
  },"232": {
    "doc": "Interactable Manager Mesh Baker Link",
    "title": "Interactable Manager Mesh Baker Link",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-MeshBakerInteractibleManagerLink.html"
  },"233": {
    "doc": "Singleton<T>",
    "title": "Singleton&lt;T&gt; Public class",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html#singletont-public-class",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html#singletont-public-class"
  },"234": {
    "doc": "Singleton<T>",
    "title": "Diagram",
    "content": "flowchart LR classDef interfaceStyle stroke-dasharray: 5 5; classDef abstractStyle stroke-width:4px subgraph UnityEngine UnityEngine.MonoBehaviour[[MonoBehaviour]] UnityEngine.MonoBehaviour[[MonoBehaviour]] end subgraph Rhinox.XR.Grapple.It Rhinox.XR.Grapple.It.Singleton_1[[Singleton&lt; T &gt;]] class Rhinox.XR.Grapple.It.Singleton_1 abstractStyle; Rhinox.XR.Grapple.It.Singleton_1T((T)); Rhinox.XR.Grapple.It.Singleton_1 -- where --o Rhinox.XR.Grapple.It.Singleton_1T UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.Singleton_1T end UnityEngine.MonoBehaviour --&gt; Rhinox.XR.Grapple.It.Singleton_1 . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html#diagram",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html#diagram"
  },"235": {
    "doc": "Singleton<T>",
    "title": "Details",
    "content": "Inheritance . | MonoBehaviour | . Constructors . Singleton . protected Singleton() . Generated with ModularDoc . ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html#details",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html#details"
  },"236": {
    "doc": "Singleton<T>",
    "title": "Singleton<T>",
    "content": " ",
    "url": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html",
    
    "relUrl": "/pages/GRPL_IT/rhinoxxrgrappleit-SingletonT.html"
  },"237": {
    "doc": "Hand Visualization",
    "title": "Hand Visualization",
    "content": " ",
    "url": "/pages/GRPL_Core/visualization.html",
    
    "relUrl": "/pages/GRPL_Core/visualization.html"
  }
}
